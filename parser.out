Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    subprog_decl -> func_decl
Rule 15    proc_decl -> PROCEDURE proc_name SEMICOLON inblock
Rule 16    proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
Rule 17    func_decl -> FUNCTION func_name LPAREN RPAREN SEMICOLON inblock
Rule 18    func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
Rule 19    callee_arg_list -> IDENT act_insert_prev_var_ident
Rule 20    callee_arg_list -> callee_arg_list COMMA IDENT act_insert_prev_var_ident
Rule 21    act_proc_args_set -> <empty>
Rule 22    act_proc_args_done -> <empty>
Rule 23    proc_name -> IDENT act_insert_prev_proc_ident
Rule 24    func_name -> IDENT act_insert_prev_func_ident act_lookup_prev_ident
Rule 25    inblock -> var_decl_part statement
Rule 26    statement_list -> statement_list SEMICOLON statement
Rule 27    statement_list -> statement
Rule 28    statement -> assignment_statement
Rule 29    statement -> if_statement
Rule 30    statement -> while_statement
Rule 31    statement -> for_statement
Rule 32    statement -> proc_call_statement
Rule 33    statement -> null_statement
Rule 34    statement -> block_statement
Rule 35    statement -> read_statement
Rule 36    statement -> write_statement
Rule 37    assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
Rule 38    assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
Rule 39    act_assign_ident -> <empty>
Rule 40    if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
Rule 41    act_generate_labels -> <empty>
Rule 42    act_insert_br -> <empty>
Rule 43    act_insert_label1 -> <empty>
Rule 44    act_insert_label2 -> <empty>
Rule 45    act_insert_label3 -> <empty>
Rule 46    act_insert_jump1 -> <empty>
Rule 47    act_insert_jump3 -> <empty>
Rule 48    else_statement -> ELSE statement
Rule 49    else_statement -> <empty>
Rule 50    while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
Rule 51    act_insert_br_while -> <empty>
Rule 52    for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
Rule 53    act_insert_br_for -> <empty>
Rule 54    act_increment_itr -> <empty>
Rule 55    proc_call_statement -> proc_call_name
Rule 56    proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN
Rule 57    proc_call_name -> IDENT act_lookup_prev_ident
Rule 58    caller_arg_list -> expression
Rule 59    caller_arg_list -> caller_arg_list COMMA expression
Rule 60    block_statement -> BEGIN statement_list END
Rule 61    read_statement -> READ LPAREN var_name_addr RPAREN
Rule 62    write_statement -> WRITE LPAREN expression RPAREN
Rule 63    null_statement -> <empty>
Rule 64    condition -> expression EQ expression
Rule 65    condition -> expression NEQ expression
Rule 66    condition -> expression LT expression
Rule 67    condition -> expression LE expression
Rule 68    condition -> expression GT expression
Rule 69    condition -> expression GE expression
Rule 70    expression -> term
Rule 71    expression -> MINUS term
Rule 72    expression -> expression PLUS term
Rule 73    expression -> expression MINUS term
Rule 74    term -> factor
Rule 75    term -> term MULT factor
Rule 76    term -> term DIV factor
Rule 77    factor -> var_name
Rule 78    factor -> number
Rule 79    factor -> LPAREN expression RPAREN
Rule 80    factor -> func_call
Rule 81    func_call -> func_call_name LPAREN RPAREN
Rule 82    func_call -> func_call_name LPAREN caller_arg_list RPAREN
Rule 83    func_call_name -> IDENT act_lookup_prev_ident
Rule 84    var_name -> var_name_addr
Rule 85    var_name_addr -> IDENT act_lookup_prev_ident
Rule 86    var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
Rule 87    number -> NUMBER
Rule 88    id_list -> IDENT act_insert_prev_var_ident
Rule 89    id_list -> IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident
Rule 90    id_list -> id_list COMMA IDENT act_insert_prev_var_ident
Rule 91    id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident
Rule 92    act_insert_prev_var_ident -> <empty>
Rule 93    act_insert_prev_proc_ident -> <empty>
Rule 94    act_insert_prev_func_ident -> <empty>
Rule 95    act_insert_array_var_ident -> <empty>
Rule 96    act_lookup_prev_ident -> <empty>
Rule 97    act_set_varscope_local -> <empty>
Rule 98    act_set_varscope_global -> act_delete_local_ident
Rule 99    act_delete_local_ident -> <empty>

Terminals, with rules where they appear

ASSIGN               : 37 38 52
BEGIN                : 60
COMMA                : 20 59 90 91
DIV                  : 76
DO                   : 50 52
ELSE                 : 48
END                  : 60
EQ                   : 64
FOR                  : 52
FUNCTION             : 17 18
GE                   : 69
GT                   : 68
IDENT                : 1 19 20 23 24 37 38 52 57 83 85 86 88 89 90 91
IF                   : 40
INTERVAL             : 89 91
LBRACKET             : 38 86 89 91
LE                   : 67
LPAREN               : 16 17 18 56 61 62 79 81 82
LT                   : 66
MINUS                : 71 73
MULT                 : 75
NEQ                  : 65
NUMBER               : 87
PERIOD               : 1
PLUS                 : 72
PROCEDURE            : 15 16
PROGRAM              : 1
RBRACKET             : 38 86 89 91
READ                 : 61
RPAREN               : 16 17 18 56 61 62 79 81 82
SEMICOLON            : 1 4 6 9 11 15 16 17 18 26
THEN                 : 40
TO                   : 52
VAR                  : 8
WHILE                : 50
WRITE                : 62
error                : 

Nonterminals, with rules where they appear

act_assign_ident     : 37 52
act_delete_local_ident : 98
act_generate_labels  : 40 50 52
act_increment_itr    : 52
act_insert_array_var_ident : 89 91
act_insert_br        : 40
act_insert_br_for    : 52
act_insert_br_while  : 50
act_insert_jump1     : 50 50 52 52
act_insert_jump3     : 40 40
act_insert_label1    : 40 50 52
act_insert_label2    : 40 50 52
act_insert_label3    : 40 50 52
act_insert_prev_func_ident : 24
act_insert_prev_proc_ident : 23
act_insert_prev_var_ident : 19 20 88 90
act_lookup_prev_ident : 24 37 38 52 57 83 85 86
act_proc_args_done   : 16 18
act_proc_args_set    : 16 18
act_set_varscope_global : 2
act_set_varscope_local : 2
assignment_statement : 28
block_statement      : 34
callee_arg_list      : 16 18 20
caller_arg_list      : 56 59 82
condition            : 40 50
else_statement       : 40
expression           : 37 38 38 52 52 58 59 62 64 64 65 65 66 66 67 67 68 68 69 69 72 73 79 86
factor               : 74 75 76
for_statement        : 31
func_call            : 80
func_call_name       : 81 82
func_decl            : 14
func_name            : 17 18
id_list              : 8 90 91
if_statement         : 29
inblock              : 15 16 17 18
null_statement       : 33
number               : 78 89 89 91 91
outblock             : 1
outblock_act         : 2
proc_call_name       : 55 56
proc_call_statement  : 32
proc_decl            : 13
proc_name            : 15 16
program              : 0
read_statement       : 35
statement            : 2 25 26 27 40 48 50 52
statement_list       : 26 60
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 70 71 72 73 75 76
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 25
var_name             : 77
var_name_addr        : 61 84
while_statement      : 30
write_statement      : 36

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    FUNCTION        reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
    (97) act_set_varscope_local -> .

    PROCEDURE       reduce using rule 97 (act_set_varscope_local -> .)
    FUNCTION        reduce using rule 97 (act_set_varscope_local -> .)
    IDENT           reduce using rule 97 (act_set_varscope_local -> .)
    WHILE           reduce using rule 97 (act_set_varscope_local -> .)
    FOR             reduce using rule 97 (act_set_varscope_local -> .)
    BEGIN           reduce using rule 97 (act_set_varscope_local -> .)
    READ            reduce using rule 97 (act_set_varscope_local -> .)
    WRITE           reduce using rule 97 (act_set_varscope_local -> .)
    IF              reduce using rule 97 (act_set_varscope_local -> .)
    PERIOD          reduce using rule 97 (act_set_varscope_local -> .)

    act_set_varscope_local         shift and go to state 11

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 12


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (88) id_list -> . IDENT act_insert_prev_var_ident
    (89) id_list -> . IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident
    (90) id_list -> . id_list COMMA IDENT act_insert_prev_var_ident
    (91) id_list -> . id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident

    IDENT           shift and go to state 14

    id_list                        shift and go to state 13

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part act_set_varscope_local . subprog_decl_part outblock_act act_set_varscope_global statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) subprog_decl -> . func_decl
    (15) proc_decl -> . PROCEDURE proc_name SEMICOLON inblock
    (16) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (17) func_decl -> . FUNCTION func_name LPAREN RPAREN SEMICOLON inblock
    (18) func_decl -> . FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 21

    subprog_decl_part              shift and go to state 15
    subprog_decl_list              shift and go to state 16
    subprog_decl                   shift and go to state 17
    proc_decl                      shift and go to state 18
    func_decl                      shift and go to state 19

state 12

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FUNCTION        reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 22

state 13

    (8) var_decl -> VAR id_list .
    (90) id_list -> id_list . COMMA IDENT act_insert_prev_var_ident
    (91) id_list -> id_list . COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 23


state 14

    (88) id_list -> IDENT . act_insert_prev_var_ident
    (89) id_list -> IDENT . LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident
    (92) act_insert_prev_var_ident -> .

    LBRACKET        shift and go to state 25
    COMMA           reduce using rule 92 (act_insert_prev_var_ident -> .)
    SEMICOLON       reduce using rule 92 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 24

state 15

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part . outblock_act act_set_varscope_global statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 26

state 16

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 27


state 17

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 18

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 19

    (14) subprog_decl -> func_decl .

    SEMICOLON       reduce using rule 14 (subprog_decl -> func_decl .)


state 20

    (15) proc_decl -> PROCEDURE . proc_name SEMICOLON inblock
    (16) proc_decl -> PROCEDURE . proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (23) proc_name -> . IDENT act_insert_prev_proc_ident

    IDENT           shift and go to state 29

    proc_name                      shift and go to state 28

state 21

    (17) func_decl -> FUNCTION . func_name LPAREN RPAREN SEMICOLON inblock
    (18) func_decl -> FUNCTION . func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (24) func_name -> . IDENT act_insert_prev_func_ident act_lookup_prev_ident

    IDENT           shift and go to state 31

    func_name                      shift and go to state 30

state 22

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 23

    (90) id_list -> id_list COMMA . IDENT act_insert_prev_var_ident
    (91) id_list -> id_list COMMA . IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident

    IDENT           shift and go to state 32


state 24

    (88) id_list -> IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 88 (id_list -> IDENT act_insert_prev_var_ident .)
    SEMICOLON       reduce using rule 88 (id_list -> IDENT act_insert_prev_var_ident .)


state 25

    (89) id_list -> IDENT LBRACKET . number INTERVAL number RBRACKET act_insert_array_var_ident
    (87) number -> . NUMBER

    NUMBER          shift and go to state 34

    number                         shift and go to state 33

state 26

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act . act_set_varscope_global statement
    (98) act_set_varscope_global -> . act_delete_local_ident
    (99) act_delete_local_ident -> .

    IDENT           reduce using rule 99 (act_delete_local_ident -> .)
    WHILE           reduce using rule 99 (act_delete_local_ident -> .)
    FOR             reduce using rule 99 (act_delete_local_ident -> .)
    BEGIN           reduce using rule 99 (act_delete_local_ident -> .)
    READ            reduce using rule 99 (act_delete_local_ident -> .)
    WRITE           reduce using rule 99 (act_delete_local_ident -> .)
    IF              reduce using rule 99 (act_delete_local_ident -> .)
    PERIOD          reduce using rule 99 (act_delete_local_ident -> .)

    act_set_varscope_global        shift and go to state 35
    act_delete_local_ident         shift and go to state 36

state 27

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) subprog_decl -> . func_decl
    (15) proc_decl -> . PROCEDURE proc_name SEMICOLON inblock
    (16) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (17) func_decl -> . FUNCTION func_name LPAREN RPAREN SEMICOLON inblock
    (18) func_decl -> . FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 21

    subprog_decl                   shift and go to state 37
    proc_decl                      shift and go to state 18
    func_decl                      shift and go to state 19

state 28

    (15) proc_decl -> PROCEDURE proc_name . SEMICOLON inblock
    (16) proc_decl -> PROCEDURE proc_name . LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock

    SEMICOLON       shift and go to state 38
    LPAREN          shift and go to state 39


state 29

    (23) proc_name -> IDENT . act_insert_prev_proc_ident
    (93) act_insert_prev_proc_ident -> .

    SEMICOLON       reduce using rule 93 (act_insert_prev_proc_ident -> .)
    LPAREN          reduce using rule 93 (act_insert_prev_proc_ident -> .)

    act_insert_prev_proc_ident     shift and go to state 40

state 30

    (17) func_decl -> FUNCTION func_name . LPAREN RPAREN SEMICOLON inblock
    (18) func_decl -> FUNCTION func_name . LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock

    LPAREN          shift and go to state 41


state 31

    (24) func_name -> IDENT . act_insert_prev_func_ident act_lookup_prev_ident
    (94) act_insert_prev_func_ident -> .

    LPAREN          reduce using rule 94 (act_insert_prev_func_ident -> .)

    act_insert_prev_func_ident     shift and go to state 42

state 32

    (90) id_list -> id_list COMMA IDENT . act_insert_prev_var_ident
    (91) id_list -> id_list COMMA IDENT . LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident
    (92) act_insert_prev_var_ident -> .

    LBRACKET        shift and go to state 44
    COMMA           reduce using rule 92 (act_insert_prev_var_ident -> .)
    SEMICOLON       reduce using rule 92 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 43

state 33

    (89) id_list -> IDENT LBRACKET number . INTERVAL number RBRACKET act_insert_array_var_ident

    INTERVAL        shift and go to state 45


state 34

    (87) number -> NUMBER .

    INTERVAL        reduce using rule 87 (number -> NUMBER .)
    RBRACKET        reduce using rule 87 (number -> NUMBER .)
    MULT            reduce using rule 87 (number -> NUMBER .)
    DIV             reduce using rule 87 (number -> NUMBER .)
    EQ              reduce using rule 87 (number -> NUMBER .)
    NEQ             reduce using rule 87 (number -> NUMBER .)
    LT              reduce using rule 87 (number -> NUMBER .)
    LE              reduce using rule 87 (number -> NUMBER .)
    GT              reduce using rule 87 (number -> NUMBER .)
    GE              reduce using rule 87 (number -> NUMBER .)
    PLUS            reduce using rule 87 (number -> NUMBER .)
    MINUS           reduce using rule 87 (number -> NUMBER .)
    RPAREN          reduce using rule 87 (number -> NUMBER .)
    COMMA           reduce using rule 87 (number -> NUMBER .)
    PERIOD          reduce using rule 87 (number -> NUMBER .)
    END             reduce using rule 87 (number -> NUMBER .)
    SEMICOLON       reduce using rule 87 (number -> NUMBER .)
    ELSE            reduce using rule 87 (number -> NUMBER .)
    THEN            reduce using rule 87 (number -> NUMBER .)
    DO              reduce using rule 87 (number -> NUMBER .)
    TO              reduce using rule 87 (number -> NUMBER .)


state 35

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global . statement
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    PERIOD          reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    statement                      shift and go to state 46
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    act_generate_labels            shift and go to state 57
    proc_call_name                 shift and go to state 60

state 36

    (98) act_set_varscope_global -> act_delete_local_ident .

    IDENT           reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    WHILE           reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    FOR             reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    BEGIN           reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    READ            reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    WRITE           reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    IF              reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)
    PERIOD          reduce using rule 98 (act_set_varscope_global -> act_delete_local_ident .)


state 37

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 38

    (15) proc_decl -> PROCEDURE proc_name SEMICOLON . inblock
    (25) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 64
    var_decl_part                  shift and go to state 65
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 39

    (16) proc_decl -> PROCEDURE proc_name LPAREN . act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (21) act_proc_args_set -> .

    IDENT           reduce using rule 21 (act_proc_args_set -> .)

    act_proc_args_set              shift and go to state 66

state 40

    (23) proc_name -> IDENT act_insert_prev_proc_ident .

    SEMICOLON       reduce using rule 23 (proc_name -> IDENT act_insert_prev_proc_ident .)
    LPAREN          reduce using rule 23 (proc_name -> IDENT act_insert_prev_proc_ident .)


state 41

    (17) func_decl -> FUNCTION func_name LPAREN . RPAREN SEMICOLON inblock
    (18) func_decl -> FUNCTION func_name LPAREN . act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (21) act_proc_args_set -> .

    RPAREN          shift and go to state 67
    IDENT           reduce using rule 21 (act_proc_args_set -> .)

    act_proc_args_set              shift and go to state 68

state 42

    (24) func_name -> IDENT act_insert_prev_func_ident . act_lookup_prev_ident
    (96) act_lookup_prev_ident -> .

    LPAREN          reduce using rule 96 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 69

state 43

    (90) id_list -> id_list COMMA IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 90 (id_list -> id_list COMMA IDENT act_insert_prev_var_ident .)
    SEMICOLON       reduce using rule 90 (id_list -> id_list COMMA IDENT act_insert_prev_var_ident .)


state 44

    (91) id_list -> id_list COMMA IDENT LBRACKET . number INTERVAL number RBRACKET act_insert_array_var_ident
    (87) number -> . NUMBER

    NUMBER          shift and go to state 34

    number                         shift and go to state 70

state 45

    (89) id_list -> IDENT LBRACKET number INTERVAL . number RBRACKET act_insert_array_var_ident
    (87) number -> . NUMBER

    NUMBER          shift and go to state 34

    number                         shift and go to state 71

state 46

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement .)


state 47

    (28) statement -> assignment_statement .

    PERIOD          reduce using rule 28 (statement -> assignment_statement .)
    END             reduce using rule 28 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 28 (statement -> assignment_statement .)
    ELSE            reduce using rule 28 (statement -> assignment_statement .)


state 48

    (29) statement -> if_statement .

    PERIOD          reduce using rule 29 (statement -> if_statement .)
    END             reduce using rule 29 (statement -> if_statement .)
    SEMICOLON       reduce using rule 29 (statement -> if_statement .)
    ELSE            reduce using rule 29 (statement -> if_statement .)


state 49

    (30) statement -> while_statement .

    PERIOD          reduce using rule 30 (statement -> while_statement .)
    END             reduce using rule 30 (statement -> while_statement .)
    SEMICOLON       reduce using rule 30 (statement -> while_statement .)
    ELSE            reduce using rule 30 (statement -> while_statement .)


state 50

    (31) statement -> for_statement .

    PERIOD          reduce using rule 31 (statement -> for_statement .)
    END             reduce using rule 31 (statement -> for_statement .)
    SEMICOLON       reduce using rule 31 (statement -> for_statement .)
    ELSE            reduce using rule 31 (statement -> for_statement .)


state 51

    (32) statement -> proc_call_statement .

    PERIOD          reduce using rule 32 (statement -> proc_call_statement .)
    END             reduce using rule 32 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 32 (statement -> proc_call_statement .)
    ELSE            reduce using rule 32 (statement -> proc_call_statement .)


state 52

    (33) statement -> null_statement .

    PERIOD          reduce using rule 33 (statement -> null_statement .)
    END             reduce using rule 33 (statement -> null_statement .)
    SEMICOLON       reduce using rule 33 (statement -> null_statement .)
    ELSE            reduce using rule 33 (statement -> null_statement .)


state 53

    (34) statement -> block_statement .

    PERIOD          reduce using rule 34 (statement -> block_statement .)
    END             reduce using rule 34 (statement -> block_statement .)
    SEMICOLON       reduce using rule 34 (statement -> block_statement .)
    ELSE            reduce using rule 34 (statement -> block_statement .)


state 54

    (35) statement -> read_statement .

    PERIOD          reduce using rule 35 (statement -> read_statement .)
    END             reduce using rule 35 (statement -> read_statement .)
    SEMICOLON       reduce using rule 35 (statement -> read_statement .)
    ELSE            reduce using rule 35 (statement -> read_statement .)


state 55

    (36) statement -> write_statement .

    PERIOD          reduce using rule 36 (statement -> write_statement .)
    END             reduce using rule 36 (statement -> write_statement .)
    SEMICOLON       reduce using rule 36 (statement -> write_statement .)
    ELSE            reduce using rule 36 (statement -> write_statement .)


state 56

    (37) assignment_statement -> IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> IDENT . act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (57) proc_call_name -> IDENT . act_lookup_prev_ident
    (96) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 96 (act_lookup_prev_ident -> .)
    LBRACKET        reduce using rule 96 (act_lookup_prev_ident -> .)
    LPAREN          reduce using rule 96 (act_lookup_prev_ident -> .)
    PERIOD          reduce using rule 96 (act_lookup_prev_ident -> .)
    END             reduce using rule 96 (act_lookup_prev_ident -> .)
    SEMICOLON       reduce using rule 96 (act_lookup_prev_ident -> .)
    ELSE            reduce using rule 96 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 72

state 57

    (40) if_statement -> act_generate_labels . IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    IF              shift and go to state 73


state 58

    (50) while_statement -> WHILE . act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (41) act_generate_labels -> .

    MINUS           reduce using rule 41 (act_generate_labels -> .)
    LPAREN          reduce using rule 41 (act_generate_labels -> .)
    NUMBER          reduce using rule 41 (act_generate_labels -> .)
    IDENT           reduce using rule 41 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 74

state 59

    (52) for_statement -> FOR . act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (41) act_generate_labels -> .

    IDENT           reduce using rule 41 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 75

state 60

    (55) proc_call_statement -> proc_call_name .
    (56) proc_call_statement -> proc_call_name . LPAREN caller_arg_list RPAREN

    PERIOD          reduce using rule 55 (proc_call_statement -> proc_call_name .)
    END             reduce using rule 55 (proc_call_statement -> proc_call_name .)
    SEMICOLON       reduce using rule 55 (proc_call_statement -> proc_call_name .)
    ELSE            reduce using rule 55 (proc_call_statement -> proc_call_name .)
    LPAREN          shift and go to state 76


state 61

    (60) block_statement -> BEGIN . statement_list END
    (26) statement_list -> . statement_list SEMICOLON statement
    (27) statement_list -> . statement
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    statement_list                 shift and go to state 77
    statement                      shift and go to state 78
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    act_generate_labels            shift and go to state 57
    proc_call_name                 shift and go to state 60

state 62

    (61) read_statement -> READ . LPAREN var_name_addr RPAREN

    LPAREN          shift and go to state 79


state 63

    (62) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 80


state 64

    (15) proc_decl -> PROCEDURE proc_name SEMICOLON inblock .

    SEMICOLON       reduce using rule 15 (proc_decl -> PROCEDURE proc_name SEMICOLON inblock .)


state 65

    (25) inblock -> var_decl_part . statement
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    statement                      shift and go to state 81
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    act_generate_labels            shift and go to state 57
    proc_call_name                 shift and go to state 60

state 66

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set . callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (19) callee_arg_list -> . IDENT act_insert_prev_var_ident
    (20) callee_arg_list -> . callee_arg_list COMMA IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 83

    callee_arg_list                shift and go to state 82

state 67

    (17) func_decl -> FUNCTION func_name LPAREN RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 84


state 68

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set . callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock
    (19) callee_arg_list -> . IDENT act_insert_prev_var_ident
    (20) callee_arg_list -> . callee_arg_list COMMA IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 83

    callee_arg_list                shift and go to state 85

state 69

    (24) func_name -> IDENT act_insert_prev_func_ident act_lookup_prev_ident .

    LPAREN          reduce using rule 24 (func_name -> IDENT act_insert_prev_func_ident act_lookup_prev_ident .)


state 70

    (91) id_list -> id_list COMMA IDENT LBRACKET number . INTERVAL number RBRACKET act_insert_array_var_ident

    INTERVAL        shift and go to state 86


state 71

    (89) id_list -> IDENT LBRACKET number INTERVAL number . RBRACKET act_insert_array_var_ident

    RBRACKET        shift and go to state 87


state 72

    (37) assignment_statement -> IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident
    (38) assignment_statement -> IDENT act_lookup_prev_ident . LBRACKET expression RBRACKET ASSIGN expression
    (57) proc_call_name -> IDENT act_lookup_prev_ident .

    ASSIGN          shift and go to state 88
    LBRACKET        shift and go to state 89
    LPAREN          reduce using rule 57 (proc_call_name -> IDENT act_lookup_prev_ident .)
    PERIOD          reduce using rule 57 (proc_call_name -> IDENT act_lookup_prev_ident .)
    END             reduce using rule 57 (proc_call_name -> IDENT act_lookup_prev_ident .)
    SEMICOLON       reduce using rule 57 (proc_call_name -> IDENT act_lookup_prev_ident .)
    ELSE            reduce using rule 57 (proc_call_name -> IDENT act_lookup_prev_ident .)


state 73

    (40) if_statement -> act_generate_labels IF . condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (64) condition -> . expression EQ expression
    (65) condition -> . expression NEQ expression
    (66) condition -> . expression LT expression
    (67) condition -> . expression LE expression
    (68) condition -> . expression GT expression
    (69) condition -> . expression GE expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    condition                      shift and go to state 90
    expression                     shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 74

    (50) while_statement -> WHILE act_generate_labels . act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) act_insert_jump1 -> .

    MINUS           reduce using rule 46 (act_insert_jump1 -> .)
    LPAREN          reduce using rule 46 (act_insert_jump1 -> .)
    NUMBER          reduce using rule 46 (act_insert_jump1 -> .)
    IDENT           reduce using rule 46 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 102

state 75

    (52) for_statement -> FOR act_generate_labels . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    IDENT           shift and go to state 103


state 76

    (56) proc_call_statement -> proc_call_name LPAREN . caller_arg_list RPAREN
    (58) caller_arg_list -> . expression
    (59) caller_arg_list -> . caller_arg_list COMMA expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    caller_arg_list                shift and go to state 104
    expression                     shift and go to state 105
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 77

    (60) block_statement -> BEGIN statement_list . END
    (26) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 106
    SEMICOLON       shift and go to state 107


state 78

    (27) statement_list -> statement .

    END             reduce using rule 27 (statement_list -> statement .)
    SEMICOLON       reduce using rule 27 (statement_list -> statement .)


state 79

    (61) read_statement -> READ LPAREN . var_name_addr RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET

    IDENT           shift and go to state 109

    var_name_addr                  shift and go to state 108

state 80

    (62) write_statement -> WRITE LPAREN . expression RPAREN
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 110
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 81

    (25) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 25 (inblock -> var_decl_part statement .)


state 82

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list . act_proc_args_done RPAREN SEMICOLON inblock
    (20) callee_arg_list -> callee_arg_list . COMMA IDENT act_insert_prev_var_ident
    (22) act_proc_args_done -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 22 (act_proc_args_done -> .)

    act_proc_args_done             shift and go to state 111

state 83

    (19) callee_arg_list -> IDENT . act_insert_prev_var_ident
    (92) act_insert_prev_var_ident -> .

    COMMA           reduce using rule 92 (act_insert_prev_var_ident -> .)
    RPAREN          reduce using rule 92 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 113

state 84

    (17) func_decl -> FUNCTION func_name LPAREN RPAREN SEMICOLON . inblock
    (25) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 114
    var_decl_part                  shift and go to state 65
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 85

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list . act_proc_args_done RPAREN SEMICOLON inblock
    (20) callee_arg_list -> callee_arg_list . COMMA IDENT act_insert_prev_var_ident
    (22) act_proc_args_done -> .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 22 (act_proc_args_done -> .)

    act_proc_args_done             shift and go to state 115

state 86

    (91) id_list -> id_list COMMA IDENT LBRACKET number INTERVAL . number RBRACKET act_insert_array_var_ident
    (87) number -> . NUMBER

    NUMBER          shift and go to state 34

    number                         shift and go to state 116

state 87

    (89) id_list -> IDENT LBRACKET number INTERVAL number RBRACKET . act_insert_array_var_ident
    (95) act_insert_array_var_ident -> .

    COMMA           reduce using rule 95 (act_insert_array_var_ident -> .)
    SEMICOLON       reduce using rule 95 (act_insert_array_var_ident -> .)

    act_insert_array_var_ident     shift and go to state 117

state 88

    (37) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 118
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 89

    (38) assignment_statement -> IDENT act_lookup_prev_ident LBRACKET . expression RBRACKET ASSIGN expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 119
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 90

    (40) if_statement -> act_generate_labels IF condition . act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (42) act_insert_br -> .

    THEN            reduce using rule 42 (act_insert_br -> .)

    act_insert_br                  shift and go to state 120

state 91

    (64) condition -> expression . EQ expression
    (65) condition -> expression . NEQ expression
    (66) condition -> expression . LT expression
    (67) condition -> expression . LE expression
    (68) condition -> expression . GT expression
    (69) condition -> expression . GE expression
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    EQ              shift and go to state 121
    NEQ             shift and go to state 122
    LT              shift and go to state 123
    LE              shift and go to state 124
    GT              shift and go to state 125
    GE              shift and go to state 126
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 92

    (70) expression -> term .
    (75) term -> term . MULT factor
    (76) term -> term . DIV factor

    EQ              reduce using rule 70 (expression -> term .)
    NEQ             reduce using rule 70 (expression -> term .)
    LT              reduce using rule 70 (expression -> term .)
    LE              reduce using rule 70 (expression -> term .)
    GT              reduce using rule 70 (expression -> term .)
    GE              reduce using rule 70 (expression -> term .)
    PLUS            reduce using rule 70 (expression -> term .)
    MINUS           reduce using rule 70 (expression -> term .)
    RPAREN          reduce using rule 70 (expression -> term .)
    COMMA           reduce using rule 70 (expression -> term .)
    PERIOD          reduce using rule 70 (expression -> term .)
    END             reduce using rule 70 (expression -> term .)
    SEMICOLON       reduce using rule 70 (expression -> term .)
    ELSE            reduce using rule 70 (expression -> term .)
    RBRACKET        reduce using rule 70 (expression -> term .)
    THEN            reduce using rule 70 (expression -> term .)
    DO              reduce using rule 70 (expression -> term .)
    TO              reduce using rule 70 (expression -> term .)
    MULT            shift and go to state 129
    DIV             shift and go to state 130


state 93

    (71) expression -> MINUS . term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    term                           shift and go to state 131
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 94

    (74) term -> factor .

    MULT            reduce using rule 74 (term -> factor .)
    DIV             reduce using rule 74 (term -> factor .)
    EQ              reduce using rule 74 (term -> factor .)
    NEQ             reduce using rule 74 (term -> factor .)
    LT              reduce using rule 74 (term -> factor .)
    LE              reduce using rule 74 (term -> factor .)
    GT              reduce using rule 74 (term -> factor .)
    GE              reduce using rule 74 (term -> factor .)
    PLUS            reduce using rule 74 (term -> factor .)
    MINUS           reduce using rule 74 (term -> factor .)
    RPAREN          reduce using rule 74 (term -> factor .)
    COMMA           reduce using rule 74 (term -> factor .)
    PERIOD          reduce using rule 74 (term -> factor .)
    END             reduce using rule 74 (term -> factor .)
    SEMICOLON       reduce using rule 74 (term -> factor .)
    ELSE            reduce using rule 74 (term -> factor .)
    RBRACKET        reduce using rule 74 (term -> factor .)
    THEN            reduce using rule 74 (term -> factor .)
    DO              reduce using rule 74 (term -> factor .)
    TO              reduce using rule 74 (term -> factor .)


state 95

    (77) factor -> var_name .

    MULT            reduce using rule 77 (factor -> var_name .)
    DIV             reduce using rule 77 (factor -> var_name .)
    EQ              reduce using rule 77 (factor -> var_name .)
    NEQ             reduce using rule 77 (factor -> var_name .)
    LT              reduce using rule 77 (factor -> var_name .)
    LE              reduce using rule 77 (factor -> var_name .)
    GT              reduce using rule 77 (factor -> var_name .)
    GE              reduce using rule 77 (factor -> var_name .)
    PLUS            reduce using rule 77 (factor -> var_name .)
    MINUS           reduce using rule 77 (factor -> var_name .)
    RPAREN          reduce using rule 77 (factor -> var_name .)
    COMMA           reduce using rule 77 (factor -> var_name .)
    PERIOD          reduce using rule 77 (factor -> var_name .)
    END             reduce using rule 77 (factor -> var_name .)
    SEMICOLON       reduce using rule 77 (factor -> var_name .)
    ELSE            reduce using rule 77 (factor -> var_name .)
    RBRACKET        reduce using rule 77 (factor -> var_name .)
    THEN            reduce using rule 77 (factor -> var_name .)
    DO              reduce using rule 77 (factor -> var_name .)
    TO              reduce using rule 77 (factor -> var_name .)


state 96

    (78) factor -> number .

    MULT            reduce using rule 78 (factor -> number .)
    DIV             reduce using rule 78 (factor -> number .)
    EQ              reduce using rule 78 (factor -> number .)
    NEQ             reduce using rule 78 (factor -> number .)
    LT              reduce using rule 78 (factor -> number .)
    LE              reduce using rule 78 (factor -> number .)
    GT              reduce using rule 78 (factor -> number .)
    GE              reduce using rule 78 (factor -> number .)
    PLUS            reduce using rule 78 (factor -> number .)
    MINUS           reduce using rule 78 (factor -> number .)
    RPAREN          reduce using rule 78 (factor -> number .)
    COMMA           reduce using rule 78 (factor -> number .)
    PERIOD          reduce using rule 78 (factor -> number .)
    END             reduce using rule 78 (factor -> number .)
    SEMICOLON       reduce using rule 78 (factor -> number .)
    ELSE            reduce using rule 78 (factor -> number .)
    RBRACKET        reduce using rule 78 (factor -> number .)
    THEN            reduce using rule 78 (factor -> number .)
    DO              reduce using rule 78 (factor -> number .)
    TO              reduce using rule 78 (factor -> number .)


state 97

    (79) factor -> LPAREN . expression RPAREN
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 132
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 98

    (80) factor -> func_call .

    MULT            reduce using rule 80 (factor -> func_call .)
    DIV             reduce using rule 80 (factor -> func_call .)
    EQ              reduce using rule 80 (factor -> func_call .)
    NEQ             reduce using rule 80 (factor -> func_call .)
    LT              reduce using rule 80 (factor -> func_call .)
    LE              reduce using rule 80 (factor -> func_call .)
    GT              reduce using rule 80 (factor -> func_call .)
    GE              reduce using rule 80 (factor -> func_call .)
    PLUS            reduce using rule 80 (factor -> func_call .)
    MINUS           reduce using rule 80 (factor -> func_call .)
    RPAREN          reduce using rule 80 (factor -> func_call .)
    COMMA           reduce using rule 80 (factor -> func_call .)
    PERIOD          reduce using rule 80 (factor -> func_call .)
    END             reduce using rule 80 (factor -> func_call .)
    SEMICOLON       reduce using rule 80 (factor -> func_call .)
    ELSE            reduce using rule 80 (factor -> func_call .)
    RBRACKET        reduce using rule 80 (factor -> func_call .)
    THEN            reduce using rule 80 (factor -> func_call .)
    DO              reduce using rule 80 (factor -> func_call .)
    TO              reduce using rule 80 (factor -> func_call .)


state 99

    (84) var_name -> var_name_addr .

    MULT            reduce using rule 84 (var_name -> var_name_addr .)
    DIV             reduce using rule 84 (var_name -> var_name_addr .)
    EQ              reduce using rule 84 (var_name -> var_name_addr .)
    NEQ             reduce using rule 84 (var_name -> var_name_addr .)
    LT              reduce using rule 84 (var_name -> var_name_addr .)
    LE              reduce using rule 84 (var_name -> var_name_addr .)
    GT              reduce using rule 84 (var_name -> var_name_addr .)
    GE              reduce using rule 84 (var_name -> var_name_addr .)
    PLUS            reduce using rule 84 (var_name -> var_name_addr .)
    MINUS           reduce using rule 84 (var_name -> var_name_addr .)
    RPAREN          reduce using rule 84 (var_name -> var_name_addr .)
    COMMA           reduce using rule 84 (var_name -> var_name_addr .)
    PERIOD          reduce using rule 84 (var_name -> var_name_addr .)
    END             reduce using rule 84 (var_name -> var_name_addr .)
    SEMICOLON       reduce using rule 84 (var_name -> var_name_addr .)
    ELSE            reduce using rule 84 (var_name -> var_name_addr .)
    RBRACKET        reduce using rule 84 (var_name -> var_name_addr .)
    THEN            reduce using rule 84 (var_name -> var_name_addr .)
    DO              reduce using rule 84 (var_name -> var_name_addr .)
    TO              reduce using rule 84 (var_name -> var_name_addr .)


state 100

    (81) func_call -> func_call_name . LPAREN RPAREN
    (82) func_call -> func_call_name . LPAREN caller_arg_list RPAREN

    LPAREN          shift and go to state 133


state 101

    (85) var_name_addr -> IDENT . act_lookup_prev_ident
    (86) var_name_addr -> IDENT . act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> IDENT . act_lookup_prev_ident
    (96) act_lookup_prev_ident -> .

    LBRACKET        reduce using rule 96 (act_lookup_prev_ident -> .)
    MULT            reduce using rule 96 (act_lookup_prev_ident -> .)
    DIV             reduce using rule 96 (act_lookup_prev_ident -> .)
    EQ              reduce using rule 96 (act_lookup_prev_ident -> .)
    NEQ             reduce using rule 96 (act_lookup_prev_ident -> .)
    LT              reduce using rule 96 (act_lookup_prev_ident -> .)
    LE              reduce using rule 96 (act_lookup_prev_ident -> .)
    GT              reduce using rule 96 (act_lookup_prev_ident -> .)
    GE              reduce using rule 96 (act_lookup_prev_ident -> .)
    PLUS            reduce using rule 96 (act_lookup_prev_ident -> .)
    MINUS           reduce using rule 96 (act_lookup_prev_ident -> .)
    LPAREN          reduce using rule 96 (act_lookup_prev_ident -> .)
    RPAREN          reduce using rule 96 (act_lookup_prev_ident -> .)
    COMMA           reduce using rule 96 (act_lookup_prev_ident -> .)
    PERIOD          reduce using rule 96 (act_lookup_prev_ident -> .)
    END             reduce using rule 96 (act_lookup_prev_ident -> .)
    SEMICOLON       reduce using rule 96 (act_lookup_prev_ident -> .)
    ELSE            reduce using rule 96 (act_lookup_prev_ident -> .)
    RBRACKET        reduce using rule 96 (act_lookup_prev_ident -> .)
    THEN            reduce using rule 96 (act_lookup_prev_ident -> .)
    DO              reduce using rule 96 (act_lookup_prev_ident -> .)
    TO              reduce using rule 96 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 134

state 102

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 . act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (43) act_insert_label1 -> .

    MINUS           reduce using rule 43 (act_insert_label1 -> .)
    LPAREN          reduce using rule 43 (act_insert_label1 -> .)
    NUMBER          reduce using rule 43 (act_insert_label1 -> .)
    IDENT           reduce using rule 43 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 135

state 103

    (52) for_statement -> FOR act_generate_labels IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (96) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 96 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 136

state 104

    (56) proc_call_statement -> proc_call_name LPAREN caller_arg_list . RPAREN
    (59) caller_arg_list -> caller_arg_list . COMMA expression

    RPAREN          shift and go to state 137
    COMMA           shift and go to state 138


state 105

    (58) caller_arg_list -> expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RPAREN          reduce using rule 58 (caller_arg_list -> expression .)
    COMMA           reduce using rule 58 (caller_arg_list -> expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 106

    (60) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 60 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 60 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 60 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 60 (block_statement -> BEGIN statement_list END .)


state 107

    (26) statement_list -> statement_list SEMICOLON . statement
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    statement                      shift and go to state 139
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    act_generate_labels            shift and go to state 57
    proc_call_name                 shift and go to state 60

state 108

    (61) read_statement -> READ LPAREN var_name_addr . RPAREN

    RPAREN          shift and go to state 140


state 109

    (85) var_name_addr -> IDENT . act_lookup_prev_ident
    (86) var_name_addr -> IDENT . act_lookup_prev_ident LBRACKET expression RBRACKET
    (96) act_lookup_prev_ident -> .

    LBRACKET        reduce using rule 96 (act_lookup_prev_ident -> .)
    RPAREN          reduce using rule 96 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 141

state 110

    (62) write_statement -> WRITE LPAREN expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RPAREN          shift and go to state 142
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 111

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 143


state 112

    (20) callee_arg_list -> callee_arg_list COMMA . IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 144


state 113

    (19) callee_arg_list -> IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 19 (callee_arg_list -> IDENT act_insert_prev_var_ident .)
    RPAREN          reduce using rule 19 (callee_arg_list -> IDENT act_insert_prev_var_ident .)


state 114

    (17) func_decl -> FUNCTION func_name LPAREN RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 17 (func_decl -> FUNCTION func_name LPAREN RPAREN SEMICOLON inblock .)


state 115

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 145


state 116

    (91) id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number . RBRACKET act_insert_array_var_ident

    RBRACKET        shift and go to state 146


state 117

    (89) id_list -> IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .

    COMMA           reduce using rule 89 (id_list -> IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .)
    SEMICOLON       reduce using rule 89 (id_list -> IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .)


state 118

    (37) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (39) act_assign_ident -> .

    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    PERIOD          reduce using rule 39 (act_assign_ident -> .)
    END             reduce using rule 39 (act_assign_ident -> .)
    SEMICOLON       reduce using rule 39 (act_assign_ident -> .)
    ELSE            reduce using rule 39 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 147

state 119

    (38) assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression . RBRACKET ASSIGN expression
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RBRACKET        shift and go to state 148
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 120

    (40) if_statement -> act_generate_labels IF condition act_insert_br . THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    THEN            shift and go to state 149


state 121

    (64) condition -> expression EQ . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 150
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 122

    (65) condition -> expression NEQ . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 151
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 123

    (66) condition -> expression LT . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 152
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 124

    (67) condition -> expression LE . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 153
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 125

    (68) condition -> expression GT . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 154
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 126

    (69) condition -> expression GE . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 155
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 127

    (72) expression -> expression PLUS . term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    term                           shift and go to state 156
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 128

    (73) expression -> expression MINUS . term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    term                           shift and go to state 157
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 129

    (75) term -> term MULT . factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    factor                         shift and go to state 158
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 130

    (76) term -> term DIV . factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    factor                         shift and go to state 159
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 131

    (71) expression -> MINUS term .
    (75) term -> term . MULT factor
    (76) term -> term . DIV factor

    EQ              reduce using rule 71 (expression -> MINUS term .)
    NEQ             reduce using rule 71 (expression -> MINUS term .)
    LT              reduce using rule 71 (expression -> MINUS term .)
    LE              reduce using rule 71 (expression -> MINUS term .)
    GT              reduce using rule 71 (expression -> MINUS term .)
    GE              reduce using rule 71 (expression -> MINUS term .)
    PLUS            reduce using rule 71 (expression -> MINUS term .)
    MINUS           reduce using rule 71 (expression -> MINUS term .)
    RPAREN          reduce using rule 71 (expression -> MINUS term .)
    COMMA           reduce using rule 71 (expression -> MINUS term .)
    PERIOD          reduce using rule 71 (expression -> MINUS term .)
    END             reduce using rule 71 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 71 (expression -> MINUS term .)
    ELSE            reduce using rule 71 (expression -> MINUS term .)
    RBRACKET        reduce using rule 71 (expression -> MINUS term .)
    THEN            reduce using rule 71 (expression -> MINUS term .)
    DO              reduce using rule 71 (expression -> MINUS term .)
    TO              reduce using rule 71 (expression -> MINUS term .)
    MULT            shift and go to state 129
    DIV             shift and go to state 130


state 132

    (79) factor -> LPAREN expression . RPAREN
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 133

    (81) func_call -> func_call_name LPAREN . RPAREN
    (82) func_call -> func_call_name LPAREN . caller_arg_list RPAREN
    (58) caller_arg_list -> . expression
    (59) caller_arg_list -> . caller_arg_list COMMA expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    RPAREN          shift and go to state 161
    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    func_call_name                 shift and go to state 100
    caller_arg_list                shift and go to state 162
    expression                     shift and go to state 105
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99

state 134

    (85) var_name_addr -> IDENT act_lookup_prev_ident .
    (86) var_name_addr -> IDENT act_lookup_prev_ident . LBRACKET expression RBRACKET
    (83) func_call_name -> IDENT act_lookup_prev_ident .

    MULT            reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    DIV             reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    EQ              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    NEQ             reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    LT              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    LE              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    GT              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    GE              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    PLUS            reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    MINUS           reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    RPAREN          reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    COMMA           reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    PERIOD          reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    END             reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    SEMICOLON       reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    ELSE            reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    RBRACKET        reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    THEN            reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    DO              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    TO              reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    LBRACKET        shift and go to state 163
    LPAREN          reduce using rule 83 (func_call_name -> IDENT act_lookup_prev_ident .)


state 135

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 . condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (64) condition -> . expression EQ expression
    (65) condition -> . expression NEQ expression
    (66) condition -> . expression LT expression
    (67) condition -> . expression LE expression
    (68) condition -> . expression GT expression
    (69) condition -> . expression GE expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    condition                      shift and go to state 164
    expression                     shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 136

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    ASSIGN          shift and go to state 165


state 137

    (56) proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN .

    PERIOD          reduce using rule 56 (proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN .)
    END             reduce using rule 56 (proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN .)
    SEMICOLON       reduce using rule 56 (proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN .)
    ELSE            reduce using rule 56 (proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN .)


state 138

    (59) caller_arg_list -> caller_arg_list COMMA . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 166
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 139

    (26) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 26 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 26 (statement_list -> statement_list SEMICOLON statement .)


state 140

    (61) read_statement -> READ LPAREN var_name_addr RPAREN .

    PERIOD          reduce using rule 61 (read_statement -> READ LPAREN var_name_addr RPAREN .)
    END             reduce using rule 61 (read_statement -> READ LPAREN var_name_addr RPAREN .)
    SEMICOLON       reduce using rule 61 (read_statement -> READ LPAREN var_name_addr RPAREN .)
    ELSE            reduce using rule 61 (read_statement -> READ LPAREN var_name_addr RPAREN .)


state 141

    (85) var_name_addr -> IDENT act_lookup_prev_ident .
    (86) var_name_addr -> IDENT act_lookup_prev_ident . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 85 (var_name_addr -> IDENT act_lookup_prev_ident .)
    LBRACKET        shift and go to state 163


state 142

    (62) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 62 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 62 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 62 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 62 (write_statement -> WRITE LPAREN expression RPAREN .)


state 143

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 167


state 144

    (20) callee_arg_list -> callee_arg_list COMMA IDENT . act_insert_prev_var_ident
    (92) act_insert_prev_var_ident -> .

    COMMA           reduce using rule 92 (act_insert_prev_var_ident -> .)
    RPAREN          reduce using rule 92 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 168

state 145

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 169


state 146

    (91) id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET . act_insert_array_var_ident
    (95) act_insert_array_var_ident -> .

    COMMA           reduce using rule 95 (act_insert_array_var_ident -> .)
    SEMICOLON       reduce using rule 95 (act_insert_array_var_ident -> .)

    act_insert_array_var_ident     shift and go to state 170

state 147

    (37) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .

    PERIOD          reduce using rule 37 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    END             reduce using rule 37 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    SEMICOLON       reduce using rule 37 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    ELSE            reduce using rule 37 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)


state 148

    (38) assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 171


state 149

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN . act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (43) act_insert_label1 -> .

    IDENT           reduce using rule 43 (act_insert_label1 -> .)
    WHILE           reduce using rule 43 (act_insert_label1 -> .)
    FOR             reduce using rule 43 (act_insert_label1 -> .)
    BEGIN           reduce using rule 43 (act_insert_label1 -> .)
    READ            reduce using rule 43 (act_insert_label1 -> .)
    WRITE           reduce using rule 43 (act_insert_label1 -> .)
    ELSE            reduce using rule 43 (act_insert_label1 -> .)
    IF              reduce using rule 43 (act_insert_label1 -> .)
    PERIOD          reduce using rule 43 (act_insert_label1 -> .)
    END             reduce using rule 43 (act_insert_label1 -> .)
    SEMICOLON       reduce using rule 43 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 172

state 150

    (64) condition -> expression EQ expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 64 (condition -> expression EQ expression .)
    DO              reduce using rule 64 (condition -> expression EQ expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 151

    (65) condition -> expression NEQ expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 65 (condition -> expression NEQ expression .)
    DO              reduce using rule 65 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 152

    (66) condition -> expression LT expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 66 (condition -> expression LT expression .)
    DO              reduce using rule 66 (condition -> expression LT expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 153

    (67) condition -> expression LE expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 67 (condition -> expression LE expression .)
    DO              reduce using rule 67 (condition -> expression LE expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 154

    (68) condition -> expression GT expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 68 (condition -> expression GT expression .)
    DO              reduce using rule 68 (condition -> expression GT expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 155

    (69) condition -> expression GE expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    THEN            reduce using rule 69 (condition -> expression GE expression .)
    DO              reduce using rule 69 (condition -> expression GE expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 156

    (72) expression -> expression PLUS term .
    (75) term -> term . MULT factor
    (76) term -> term . DIV factor

    EQ              reduce using rule 72 (expression -> expression PLUS term .)
    NEQ             reduce using rule 72 (expression -> expression PLUS term .)
    LT              reduce using rule 72 (expression -> expression PLUS term .)
    LE              reduce using rule 72 (expression -> expression PLUS term .)
    GT              reduce using rule 72 (expression -> expression PLUS term .)
    GE              reduce using rule 72 (expression -> expression PLUS term .)
    PLUS            reduce using rule 72 (expression -> expression PLUS term .)
    MINUS           reduce using rule 72 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 72 (expression -> expression PLUS term .)
    COMMA           reduce using rule 72 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 72 (expression -> expression PLUS term .)
    END             reduce using rule 72 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 72 (expression -> expression PLUS term .)
    ELSE            reduce using rule 72 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 72 (expression -> expression PLUS term .)
    THEN            reduce using rule 72 (expression -> expression PLUS term .)
    DO              reduce using rule 72 (expression -> expression PLUS term .)
    TO              reduce using rule 72 (expression -> expression PLUS term .)
    MULT            shift and go to state 129
    DIV             shift and go to state 130


state 157

    (73) expression -> expression MINUS term .
    (75) term -> term . MULT factor
    (76) term -> term . DIV factor

    EQ              reduce using rule 73 (expression -> expression MINUS term .)
    NEQ             reduce using rule 73 (expression -> expression MINUS term .)
    LT              reduce using rule 73 (expression -> expression MINUS term .)
    LE              reduce using rule 73 (expression -> expression MINUS term .)
    GT              reduce using rule 73 (expression -> expression MINUS term .)
    GE              reduce using rule 73 (expression -> expression MINUS term .)
    PLUS            reduce using rule 73 (expression -> expression MINUS term .)
    MINUS           reduce using rule 73 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 73 (expression -> expression MINUS term .)
    COMMA           reduce using rule 73 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 73 (expression -> expression MINUS term .)
    END             reduce using rule 73 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 73 (expression -> expression MINUS term .)
    ELSE            reduce using rule 73 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 73 (expression -> expression MINUS term .)
    THEN            reduce using rule 73 (expression -> expression MINUS term .)
    DO              reduce using rule 73 (expression -> expression MINUS term .)
    TO              reduce using rule 73 (expression -> expression MINUS term .)
    MULT            shift and go to state 129
    DIV             shift and go to state 130


state 158

    (75) term -> term MULT factor .

    MULT            reduce using rule 75 (term -> term MULT factor .)
    DIV             reduce using rule 75 (term -> term MULT factor .)
    EQ              reduce using rule 75 (term -> term MULT factor .)
    NEQ             reduce using rule 75 (term -> term MULT factor .)
    LT              reduce using rule 75 (term -> term MULT factor .)
    LE              reduce using rule 75 (term -> term MULT factor .)
    GT              reduce using rule 75 (term -> term MULT factor .)
    GE              reduce using rule 75 (term -> term MULT factor .)
    PLUS            reduce using rule 75 (term -> term MULT factor .)
    MINUS           reduce using rule 75 (term -> term MULT factor .)
    RPAREN          reduce using rule 75 (term -> term MULT factor .)
    COMMA           reduce using rule 75 (term -> term MULT factor .)
    PERIOD          reduce using rule 75 (term -> term MULT factor .)
    END             reduce using rule 75 (term -> term MULT factor .)
    SEMICOLON       reduce using rule 75 (term -> term MULT factor .)
    ELSE            reduce using rule 75 (term -> term MULT factor .)
    RBRACKET        reduce using rule 75 (term -> term MULT factor .)
    THEN            reduce using rule 75 (term -> term MULT factor .)
    DO              reduce using rule 75 (term -> term MULT factor .)
    TO              reduce using rule 75 (term -> term MULT factor .)


state 159

    (76) term -> term DIV factor .

    MULT            reduce using rule 76 (term -> term DIV factor .)
    DIV             reduce using rule 76 (term -> term DIV factor .)
    EQ              reduce using rule 76 (term -> term DIV factor .)
    NEQ             reduce using rule 76 (term -> term DIV factor .)
    LT              reduce using rule 76 (term -> term DIV factor .)
    LE              reduce using rule 76 (term -> term DIV factor .)
    GT              reduce using rule 76 (term -> term DIV factor .)
    GE              reduce using rule 76 (term -> term DIV factor .)
    PLUS            reduce using rule 76 (term -> term DIV factor .)
    MINUS           reduce using rule 76 (term -> term DIV factor .)
    RPAREN          reduce using rule 76 (term -> term DIV factor .)
    COMMA           reduce using rule 76 (term -> term DIV factor .)
    PERIOD          reduce using rule 76 (term -> term DIV factor .)
    END             reduce using rule 76 (term -> term DIV factor .)
    SEMICOLON       reduce using rule 76 (term -> term DIV factor .)
    ELSE            reduce using rule 76 (term -> term DIV factor .)
    RBRACKET        reduce using rule 76 (term -> term DIV factor .)
    THEN            reduce using rule 76 (term -> term DIV factor .)
    DO              reduce using rule 76 (term -> term DIV factor .)
    TO              reduce using rule 76 (term -> term DIV factor .)


state 160

    (79) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    DO              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    TO              reduce using rule 79 (factor -> LPAREN expression RPAREN .)


state 161

    (81) func_call -> func_call_name LPAREN RPAREN .

    MULT            reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    DIV             reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    EQ              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    NEQ             reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    LT              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    LE              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    GT              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    GE              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    PLUS            reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    MINUS           reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    RPAREN          reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    COMMA           reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    PERIOD          reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    END             reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    SEMICOLON       reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    ELSE            reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    RBRACKET        reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    THEN            reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    DO              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)
    TO              reduce using rule 81 (func_call -> func_call_name LPAREN RPAREN .)


state 162

    (82) func_call -> func_call_name LPAREN caller_arg_list . RPAREN
    (59) caller_arg_list -> caller_arg_list . COMMA expression

    RPAREN          shift and go to state 173
    COMMA           shift and go to state 138


state 163

    (86) var_name_addr -> IDENT act_lookup_prev_ident LBRACKET . expression RBRACKET
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 174
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 164

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition . act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (51) act_insert_br_while -> .

    DO              reduce using rule 51 (act_insert_br_while -> .)

    act_insert_br_while            shift and go to state 175

state 165

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 176
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 166

    (59) caller_arg_list -> caller_arg_list COMMA expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RPAREN          reduce using rule 59 (caller_arg_list -> caller_arg_list COMMA expression .)
    COMMA           reduce using rule 59 (caller_arg_list -> caller_arg_list COMMA expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 167

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON . inblock
    (25) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 177
    var_decl_part                  shift and go to state 65
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 168

    (20) callee_arg_list -> callee_arg_list COMMA IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 20 (callee_arg_list -> callee_arg_list COMMA IDENT act_insert_prev_var_ident .)
    RPAREN          reduce using rule 20 (callee_arg_list -> callee_arg_list COMMA IDENT act_insert_prev_var_ident .)


state 169

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON . inblock
    (25) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 178
    var_decl_part                  shift and go to state 65
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 170

    (91) id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .

    COMMA           reduce using rule 91 (id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .)
    SEMICOLON       reduce using rule 91 (id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident .)


state 171

    (38) assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN . expression
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 179
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 172

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 . statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    ELSE            reduce using rule 63 (null_statement -> .)
    PERIOD          reduce using rule 63 (null_statement -> .)
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 57
    statement                      shift and go to state 180
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    proc_call_name                 shift and go to state 60

state 173

    (82) func_call -> func_call_name LPAREN caller_arg_list RPAREN .

    MULT            reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    DIV             reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    EQ              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    NEQ             reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    LT              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    LE              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    GT              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    GE              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    PLUS            reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    MINUS           reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    RPAREN          reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    COMMA           reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    PERIOD          reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    END             reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    SEMICOLON       reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    ELSE            reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    RBRACKET        reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    THEN            reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    DO              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)
    TO              reduce using rule 82 (func_call -> func_call_name LPAREN caller_arg_list RPAREN .)


state 174

    (86) var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression . RBRACKET
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    RBRACKET        shift and go to state 181
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 175

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while . DO act_insert_label2 statement act_insert_jump1 act_insert_label3

    DO              shift and go to state 182


state 176

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (39) act_assign_ident -> .

    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TO              reduce using rule 39 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 183

state 177

    (16) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 16 (proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock .)


state 178

    (18) func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 18 (func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock .)


state 179

    (38) assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression .
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term

    PERIOD          reduce using rule 38 (assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression .)
    END             reduce using rule 38 (assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression .)
    SEMICOLON       reduce using rule 38 (assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression .)
    ELSE            reduce using rule 38 (assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128


state 180

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement . act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (47) act_insert_jump3 -> .

    ELSE            reduce using rule 47 (act_insert_jump3 -> .)
    PERIOD          reduce using rule 47 (act_insert_jump3 -> .)
    END             reduce using rule 47 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 47 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 184

state 181

    (86) var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .

    MULT            reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    DIV             reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    EQ              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    LT              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    LE              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    GT              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    GE              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    PERIOD          reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    END             reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    THEN            reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    DO              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)
    TO              reduce using rule 86 (var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET .)


state 182

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO . act_insert_label2 statement act_insert_jump1 act_insert_label3
    (44) act_insert_label2 -> .

    IDENT           reduce using rule 44 (act_insert_label2 -> .)
    WHILE           reduce using rule 44 (act_insert_label2 -> .)
    FOR             reduce using rule 44 (act_insert_label2 -> .)
    BEGIN           reduce using rule 44 (act_insert_label2 -> .)
    READ            reduce using rule 44 (act_insert_label2 -> .)
    WRITE           reduce using rule 44 (act_insert_label2 -> .)
    IF              reduce using rule 44 (act_insert_label2 -> .)
    PERIOD          reduce using rule 44 (act_insert_label2 -> .)
    END             reduce using rule 44 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 44 (act_insert_label2 -> .)
    ELSE            reduce using rule 44 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 185

state 183

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident . act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (46) act_insert_jump1 -> .

    TO              reduce using rule 46 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 186

state 184

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 . act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) act_insert_label2 -> .

    ELSE            reduce using rule 44 (act_insert_label2 -> .)
    PERIOD          reduce using rule 44 (act_insert_label2 -> .)
    END             reduce using rule 44 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 44 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 187

state 185

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 . statement act_insert_jump1 act_insert_label3
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    ELSE            reduce using rule 63 (null_statement -> .)
    PERIOD          reduce using rule 63 (null_statement -> .)
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 57
    statement                      shift and go to state 188
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    proc_call_name                 shift and go to state 60

state 186

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 . act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (43) act_insert_label1 -> .

    TO              reduce using rule 43 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 189

state 187

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 . else_statement act_insert_jump3 act_insert_label3
    (48) else_statement -> . ELSE statement
    (49) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 191
    PERIOD          reduce using rule 49 (else_statement -> .)
    END             reduce using rule 49 (else_statement -> .)
    SEMICOLON       reduce using rule 49 (else_statement -> .)

  ! ELSE            [ reduce using rule 49 (else_statement -> .) ]

    else_statement                 shift and go to state 190

state 188

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement . act_insert_jump1 act_insert_label3
    (46) act_insert_jump1 -> .

    PERIOD          reduce using rule 46 (act_insert_jump1 -> .)
    END             reduce using rule 46 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 46 (act_insert_jump1 -> .)
    ELSE            reduce using rule 46 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 192

state 189

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 . TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    TO              shift and go to state 193


state 190

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement . act_insert_jump3 act_insert_label3
    (47) act_insert_jump3 -> .

    PERIOD          reduce using rule 47 (act_insert_jump3 -> .)
    END             reduce using rule 47 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 47 (act_insert_jump3 -> .)
    ELSE            reduce using rule 47 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 194

state 191

    (48) else_statement -> ELSE . statement
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    ELSE            reduce using rule 63 (null_statement -> .)
    PERIOD          reduce using rule 63 (null_statement -> .)
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    statement                      shift and go to state 195
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    act_generate_labels            shift and go to state 57
    proc_call_name                 shift and go to state 60

state 192

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 . act_insert_label3
    (45) act_insert_label3 -> .

    PERIOD          reduce using rule 45 (act_insert_label3 -> .)
    END             reduce using rule 45 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 45 (act_insert_label3 -> .)
    ELSE            reduce using rule 45 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 196

state 193

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO . expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (70) expression -> . term
    (71) expression -> . MINUS term
    (72) expression -> . expression PLUS term
    (73) expression -> . expression MINUS term
    (74) term -> . factor
    (75) term -> . term MULT factor
    (76) term -> . term DIV factor
    (77) factor -> . var_name
    (78) factor -> . number
    (79) factor -> . LPAREN expression RPAREN
    (80) factor -> . func_call
    (84) var_name -> . var_name_addr
    (87) number -> . NUMBER
    (81) func_call -> . func_call_name LPAREN RPAREN
    (82) func_call -> . func_call_name LPAREN caller_arg_list RPAREN
    (85) var_name_addr -> . IDENT act_lookup_prev_ident
    (86) var_name_addr -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET
    (83) func_call_name -> . IDENT act_lookup_prev_ident

    MINUS           shift and go to state 93
    LPAREN          shift and go to state 97
    NUMBER          shift and go to state 34
    IDENT           shift and go to state 101

    expression                     shift and go to state 197
    term                           shift and go to state 92
    factor                         shift and go to state 94
    var_name                       shift and go to state 95
    number                         shift and go to state 96
    func_call                      shift and go to state 98
    var_name_addr                  shift and go to state 99
    func_call_name                 shift and go to state 100

state 194

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 . act_insert_label3
    (45) act_insert_label3 -> .

    PERIOD          reduce using rule 45 (act_insert_label3 -> .)
    END             reduce using rule 45 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 45 (act_insert_label3 -> .)
    ELSE            reduce using rule 45 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 198

state 195

    (48) else_statement -> ELSE statement .

    ELSE            reduce using rule 48 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 48 (else_statement -> ELSE statement .)
    END             reduce using rule 48 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 48 (else_statement -> ELSE statement .)


state 196

    (50) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 50 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 50 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 50 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 50 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)


state 197

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression . act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (72) expression -> expression . PLUS term
    (73) expression -> expression . MINUS term
    (53) act_insert_br_for -> .

    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    DO              reduce using rule 53 (act_insert_br_for -> .)

    act_insert_br_for              shift and go to state 199

state 198

    (40) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .

    PERIOD          reduce using rule 40 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    END             reduce using rule 40 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    SEMICOLON       reduce using rule 40 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    ELSE            reduce using rule 40 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)


state 199

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for . act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (44) act_insert_label2 -> .

    DO              reduce using rule 44 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 200

state 200

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 . DO statement act_increment_itr act_insert_jump1 act_insert_label3

    DO              shift and go to state 201


state 201

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO . statement act_increment_itr act_insert_jump1 act_insert_label3
    (28) statement -> . assignment_statement
    (29) statement -> . if_statement
    (30) statement -> . while_statement
    (31) statement -> . for_statement
    (32) statement -> . proc_call_statement
    (33) statement -> . null_statement
    (34) statement -> . block_statement
    (35) statement -> . read_statement
    (36) statement -> . write_statement
    (37) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (38) assignment_statement -> . IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression
    (40) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (50) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (52) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (55) proc_call_statement -> . proc_call_name
    (56) proc_call_statement -> . proc_call_name LPAREN caller_arg_list RPAREN
    (63) null_statement -> .
    (60) block_statement -> . BEGIN statement_list END
    (61) read_statement -> . READ LPAREN var_name_addr RPAREN
    (62) write_statement -> . WRITE LPAREN expression RPAREN
    (41) act_generate_labels -> .
    (57) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 56
    WHILE           shift and go to state 58
    FOR             shift and go to state 59
    ELSE            reduce using rule 63 (null_statement -> .)
    PERIOD          reduce using rule 63 (null_statement -> .)
    END             reduce using rule 63 (null_statement -> .)
    SEMICOLON       reduce using rule 63 (null_statement -> .)
    BEGIN           shift and go to state 61
    READ            shift and go to state 62
    WRITE           shift and go to state 63
    IF              reduce using rule 41 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 57
    statement                      shift and go to state 202
    assignment_statement           shift and go to state 47
    if_statement                   shift and go to state 48
    while_statement                shift and go to state 49
    for_statement                  shift and go to state 50
    proc_call_statement            shift and go to state 51
    null_statement                 shift and go to state 52
    block_statement                shift and go to state 53
    read_statement                 shift and go to state 54
    write_statement                shift and go to state 55
    proc_call_name                 shift and go to state 60

state 202

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement . act_increment_itr act_insert_jump1 act_insert_label3
    (54) act_increment_itr -> .

    PERIOD          reduce using rule 54 (act_increment_itr -> .)
    END             reduce using rule 54 (act_increment_itr -> .)
    SEMICOLON       reduce using rule 54 (act_increment_itr -> .)
    ELSE            reduce using rule 54 (act_increment_itr -> .)

    act_increment_itr              shift and go to state 203

state 203

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr . act_insert_jump1 act_insert_label3
    (46) act_insert_jump1 -> .

    PERIOD          reduce using rule 46 (act_insert_jump1 -> .)
    END             reduce using rule 46 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 46 (act_insert_jump1 -> .)
    ELSE            reduce using rule 46 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 204

state 204

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 . act_insert_label3
    (45) act_insert_label3 -> .

    PERIOD          reduce using rule 45 (act_insert_label3 -> .)
    END             reduce using rule 45 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 45 (act_insert_label3 -> .)
    ELSE            reduce using rule 45 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 205

state 205

    (52) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 52 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 52 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 52 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 52 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 187 resolved as shift
