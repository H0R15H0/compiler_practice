Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION
    INTERVAL
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM IDENT SEMICOLON outblock PERIOD
Rule 2     outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
Rule 3     outblock_act -> <empty>
Rule 4     var_decl_part -> var_decl_list SEMICOLON
Rule 5     var_decl_part -> <empty>
Rule 6     var_decl_list -> var_decl_list SEMICOLON var_decl
Rule 7     var_decl_list -> var_decl
Rule 8     var_decl -> VAR id_list
Rule 9     subprog_decl_part -> subprog_decl_list SEMICOLON
Rule 10    subprog_decl_part -> <empty>
Rule 11    subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl
Rule 12    subprog_decl_list -> subprog_decl
Rule 13    subprog_decl -> proc_decl
Rule 14    proc_decl -> PROCEDURE proc_name SEMICOLON inblock
Rule 15    proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
Rule 16    act_proc_args_set -> <empty>
Rule 17    act_proc_args_done -> <empty>
Rule 18    proc_name -> IDENT act_insert_prev_proc_ident
Rule 19    inblock -> var_decl_part statement
Rule 20    statement_list -> statement_list SEMICOLON statement
Rule 21    statement_list -> statement
Rule 22    statement -> assignment_statement
Rule 23    statement -> if_statement
Rule 24    statement -> while_statement
Rule 25    statement -> for_statement
Rule 26    statement -> proc_call_statement
Rule 27    statement -> null_statement
Rule 28    statement -> block_statement
Rule 29    statement -> read_statement
Rule 30    statement -> write_statement
Rule 31    assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
Rule 32    act_assign_ident -> <empty>
Rule 33    if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
Rule 34    act_generate_labels -> <empty>
Rule 35    act_insert_br -> <empty>
Rule 36    act_insert_label1 -> <empty>
Rule 37    act_insert_label2 -> <empty>
Rule 38    act_insert_label3 -> <empty>
Rule 39    act_insert_jump1 -> <empty>
Rule 40    act_insert_jump2 -> <empty>
Rule 41    act_insert_jump3 -> <empty>
Rule 42    else_statement -> ELSE statement
Rule 43    else_statement -> <empty>
Rule 44    while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
Rule 45    act_insert_br_while -> <empty>
Rule 46    for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
Rule 47    act_insert_br_for -> <empty>
Rule 48    act_increment_itr -> <empty>
Rule 49    proc_call_statement -> proc_call_name
Rule 50    proc_call_statement -> proc_call_name LPAREN arg_list RPAREN
Rule 51    proc_call_name -> IDENT act_lookup_prev_ident
Rule 52    arg_list -> expression
Rule 53    arg_list -> arg_list COMMA expression
Rule 54    block_statement -> BEGIN statement_list END
Rule 55    read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN
Rule 56    write_statement -> WRITE LPAREN expression RPAREN
Rule 57    null_statement -> <empty>
Rule 58    condition -> expression EQ expression
Rule 59    condition -> expression NEQ expression
Rule 60    condition -> expression LT expression
Rule 61    condition -> expression LE expression
Rule 62    condition -> expression GT expression
Rule 63    condition -> expression GE expression
Rule 64    expression -> term
Rule 65    expression -> MINUS term
Rule 66    expression -> expression PLUS term
Rule 67    expression -> expression MINUS term
Rule 68    term -> f_actor
Rule 69    term -> term MULT f_actor
Rule 70    term -> term DIV f_actor
Rule 71    f_actor -> var_name
Rule 72    f_actor -> number
Rule 73    f_actor -> LPAREN expression RPAREN
Rule 74    var_name -> IDENT act_lookup_prev_ident
Rule 75    number -> NUMBER
Rule 76    id_list -> IDENT act_insert_prev_var_ident
Rule 77    id_list -> id_list COMMA IDENT act_insert_prev_var_ident
Rule 78    act_insert_prev_var_ident -> <empty>
Rule 79    act_insert_prev_proc_ident -> <empty>
Rule 80    act_lookup_prev_ident -> <empty>
Rule 81    act_set_varscope_local -> <empty>
Rule 82    act_set_varscope_global -> act_delete_local_ident
Rule 83    act_delete_local_ident -> <empty>

Terminals, with rules where they appear

ASSIGN               : 31 46
BEGIN                : 54
COMMA                : 53 77
DIV                  : 70
DO                   : 44 46
ELSE                 : 42
END                  : 54
EQ                   : 58
FOR                  : 46
FUNCTION             : 
GE                   : 63
GT                   : 62
IDENT                : 1 18 31 46 51 55 74 76 77
IF                   : 33
INTERVAL             : 
LBRACKET             : 
LE                   : 61
LPAREN               : 15 50 55 56 73
LT                   : 60
MINUS                : 65 67
MULT                 : 69
NEQ                  : 59
NUMBER               : 75
PERIOD               : 1
PLUS                 : 66
PROCEDURE            : 14 15
PROGRAM              : 1
RBRACKET             : 
READ                 : 55
RPAREN               : 15 50 55 56 73
SEMICOLON            : 1 4 6 9 11 14 15 20
THEN                 : 33
TO                   : 46
VAR                  : 8
WHILE                : 44
WRITE                : 56
error                : 

Nonterminals, with rules where they appear

act_assign_ident     : 31 46
act_delete_local_ident : 82
act_generate_labels  : 33 44 46
act_increment_itr    : 46
act_insert_br        : 33
act_insert_br_for    : 46
act_insert_br_while  : 44
act_insert_jump1     : 44 44 46 46
act_insert_jump2     : 
act_insert_jump3     : 33 33
act_insert_label1    : 33 44 46
act_insert_label2    : 33 44 46
act_insert_label3    : 33 44 46
act_insert_prev_proc_ident : 18
act_insert_prev_var_ident : 76 77
act_lookup_prev_ident : 31 46 51 55 74
act_proc_args_done   : 15
act_proc_args_set    : 15
act_set_varscope_global : 2
act_set_varscope_local : 2
arg_list             : 50 53
assignment_statement : 22
block_statement      : 28
condition            : 33 44
else_statement       : 33
expression           : 31 46 46 52 53 56 58 58 59 59 60 60 61 61 62 62 63 63 66 67 73
f_actor              : 68 69 70
for_statement        : 25
id_list              : 8 15 77
if_statement         : 23
inblock              : 14 15
null_statement       : 27
number               : 72
outblock             : 1
outblock_act         : 2
proc_call_name       : 49 50
proc_call_statement  : 26
proc_decl            : 13
proc_name            : 14 15
program              : 0
read_statement       : 29
statement            : 2 19 20 21 33 42 44 46
statement_list       : 20 54
subprog_decl         : 11 12
subprog_decl_list    : 9 11
subprog_decl_part    : 2
term                 : 64 65 66 67 69 70
var_decl             : 6 7
var_decl_list        : 4 6
var_decl_part        : 2 19
var_name             : 71
while_statement      : 24
write_statement      : 30

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM IDENT SEMICOLON outblock PERIOD

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . IDENT SEMICOLON outblock PERIOD

    IDENT           shift and go to state 3


state 3

    (1) program -> PROGRAM IDENT . SEMICOLON outblock PERIOD

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM IDENT SEMICOLON . outblock PERIOD
    (2) outblock -> . var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 5 (var_decl_part -> .)
    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    PERIOD          reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    outblock                       shift and go to state 5
    var_decl_part                  shift and go to state 6
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 5

    (1) program -> PROGRAM IDENT SEMICOLON outblock . PERIOD

    PERIOD          shift and go to state 10


state 6

    (2) outblock -> var_decl_part . act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement
    (81) act_set_varscope_local -> .

    PROCEDURE       reduce using rule 81 (act_set_varscope_local -> .)
    IDENT           reduce using rule 81 (act_set_varscope_local -> .)
    WHILE           reduce using rule 81 (act_set_varscope_local -> .)
    FOR             reduce using rule 81 (act_set_varscope_local -> .)
    BEGIN           reduce using rule 81 (act_set_varscope_local -> .)
    READ            reduce using rule 81 (act_set_varscope_local -> .)
    WRITE           reduce using rule 81 (act_set_varscope_local -> .)
    IF              reduce using rule 81 (act_set_varscope_local -> .)
    PERIOD          reduce using rule 81 (act_set_varscope_local -> .)

    act_set_varscope_local         shift and go to state 11

state 7

    (4) var_decl_part -> var_decl_list . SEMICOLON
    (6) var_decl_list -> var_decl_list . SEMICOLON var_decl

    SEMICOLON       shift and go to state 12


state 8

    (7) var_decl_list -> var_decl .

    SEMICOLON       reduce using rule 7 (var_decl_list -> var_decl .)


state 9

    (8) var_decl -> VAR . id_list
    (76) id_list -> . IDENT act_insert_prev_var_ident
    (77) id_list -> . id_list COMMA IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 14

    id_list                        shift and go to state 13

state 10

    (1) program -> PROGRAM IDENT SEMICOLON outblock PERIOD .

    $end            reduce using rule 1 (program -> PROGRAM IDENT SEMICOLON outblock PERIOD .)


state 11

    (2) outblock -> var_decl_part act_set_varscope_local . subprog_decl_part outblock_act act_set_varscope_global statement
    (9) subprog_decl_part -> . subprog_decl_list SEMICOLON
    (10) subprog_decl_part -> .
    (11) subprog_decl_list -> . subprog_decl_list SEMICOLON subprog_decl
    (12) subprog_decl_list -> . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name SEMICOLON inblock
    (15) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 10 (subprog_decl_part -> .)
    WHILE           reduce using rule 10 (subprog_decl_part -> .)
    FOR             reduce using rule 10 (subprog_decl_part -> .)
    BEGIN           reduce using rule 10 (subprog_decl_part -> .)
    READ            reduce using rule 10 (subprog_decl_part -> .)
    WRITE           reduce using rule 10 (subprog_decl_part -> .)
    IF              reduce using rule 10 (subprog_decl_part -> .)
    PERIOD          reduce using rule 10 (subprog_decl_part -> .)
    PROCEDURE       shift and go to state 19

    subprog_decl_part              shift and go to state 15
    subprog_decl_list              shift and go to state 16
    subprog_decl                   shift and go to state 17
    proc_decl                      shift and go to state 18

state 12

    (4) var_decl_part -> var_decl_list SEMICOLON .
    (6) var_decl_list -> var_decl_list SEMICOLON . var_decl
    (8) var_decl -> . VAR id_list

    PROCEDURE       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IDENT           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WHILE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    FOR             reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    BEGIN           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    READ            reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    WRITE           reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    IF              reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    PERIOD          reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    SEMICOLON       reduce using rule 4 (var_decl_part -> var_decl_list SEMICOLON .)
    VAR             shift and go to state 9

    var_decl                       shift and go to state 20

state 13

    (8) var_decl -> VAR id_list .
    (77) id_list -> id_list . COMMA IDENT act_insert_prev_var_ident

    SEMICOLON       reduce using rule 8 (var_decl -> VAR id_list .)
    COMMA           shift and go to state 21


state 14

    (76) id_list -> IDENT . act_insert_prev_var_ident
    (78) act_insert_prev_var_ident -> .

    COMMA           reduce using rule 78 (act_insert_prev_var_ident -> .)
    SEMICOLON       reduce using rule 78 (act_insert_prev_var_ident -> .)
    RPAREN          reduce using rule 78 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 22

state 15

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part . outblock_act act_set_varscope_global statement
    (3) outblock_act -> .

    IDENT           reduce using rule 3 (outblock_act -> .)
    WHILE           reduce using rule 3 (outblock_act -> .)
    FOR             reduce using rule 3 (outblock_act -> .)
    BEGIN           reduce using rule 3 (outblock_act -> .)
    READ            reduce using rule 3 (outblock_act -> .)
    WRITE           reduce using rule 3 (outblock_act -> .)
    IF              reduce using rule 3 (outblock_act -> .)
    PERIOD          reduce using rule 3 (outblock_act -> .)

    outblock_act                   shift and go to state 23

state 16

    (9) subprog_decl_part -> subprog_decl_list . SEMICOLON
    (11) subprog_decl_list -> subprog_decl_list . SEMICOLON subprog_decl

    SEMICOLON       shift and go to state 24


state 17

    (12) subprog_decl_list -> subprog_decl .

    SEMICOLON       reduce using rule 12 (subprog_decl_list -> subprog_decl .)


state 18

    (13) subprog_decl -> proc_decl .

    SEMICOLON       reduce using rule 13 (subprog_decl -> proc_decl .)


state 19

    (14) proc_decl -> PROCEDURE . proc_name SEMICOLON inblock
    (15) proc_decl -> PROCEDURE . proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (18) proc_name -> . IDENT act_insert_prev_proc_ident

    IDENT           shift and go to state 26

    proc_name                      shift and go to state 25

state 20

    (6) var_decl_list -> var_decl_list SEMICOLON var_decl .

    SEMICOLON       reduce using rule 6 (var_decl_list -> var_decl_list SEMICOLON var_decl .)


state 21

    (77) id_list -> id_list COMMA . IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 27


state 22

    (76) id_list -> IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 76 (id_list -> IDENT act_insert_prev_var_ident .)
    SEMICOLON       reduce using rule 76 (id_list -> IDENT act_insert_prev_var_ident .)
    RPAREN          reduce using rule 76 (id_list -> IDENT act_insert_prev_var_ident .)


state 23

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act . act_set_varscope_global statement
    (82) act_set_varscope_global -> . act_delete_local_ident
    (83) act_delete_local_ident -> .

    IDENT           reduce using rule 83 (act_delete_local_ident -> .)
    WHILE           reduce using rule 83 (act_delete_local_ident -> .)
    FOR             reduce using rule 83 (act_delete_local_ident -> .)
    BEGIN           reduce using rule 83 (act_delete_local_ident -> .)
    READ            reduce using rule 83 (act_delete_local_ident -> .)
    WRITE           reduce using rule 83 (act_delete_local_ident -> .)
    IF              reduce using rule 83 (act_delete_local_ident -> .)
    PERIOD          reduce using rule 83 (act_delete_local_ident -> .)

    act_set_varscope_global        shift and go to state 28
    act_delete_local_ident         shift and go to state 29

state 24

    (9) subprog_decl_part -> subprog_decl_list SEMICOLON .
    (11) subprog_decl_list -> subprog_decl_list SEMICOLON . subprog_decl
    (13) subprog_decl -> . proc_decl
    (14) proc_decl -> . PROCEDURE proc_name SEMICOLON inblock
    (15) proc_decl -> . PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    IDENT           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WHILE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    FOR             reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    BEGIN           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    READ            reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    WRITE           reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    IF              reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PERIOD          reduce using rule 9 (subprog_decl_part -> subprog_decl_list SEMICOLON .)
    PROCEDURE       shift and go to state 19

    subprog_decl                   shift and go to state 30
    proc_decl                      shift and go to state 18

state 25

    (14) proc_decl -> PROCEDURE proc_name . SEMICOLON inblock
    (15) proc_decl -> PROCEDURE proc_name . LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock

    SEMICOLON       shift and go to state 31
    LPAREN          shift and go to state 32


state 26

    (18) proc_name -> IDENT . act_insert_prev_proc_ident
    (79) act_insert_prev_proc_ident -> .

    SEMICOLON       reduce using rule 79 (act_insert_prev_proc_ident -> .)
    LPAREN          reduce using rule 79 (act_insert_prev_proc_ident -> .)

    act_insert_prev_proc_ident     shift and go to state 33

state 27

    (77) id_list -> id_list COMMA IDENT . act_insert_prev_var_ident
    (78) act_insert_prev_var_ident -> .

    COMMA           reduce using rule 78 (act_insert_prev_var_ident -> .)
    SEMICOLON       reduce using rule 78 (act_insert_prev_var_ident -> .)
    RPAREN          reduce using rule 78 (act_insert_prev_var_ident -> .)

    act_insert_prev_var_ident      shift and go to state 34

state 28

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global . statement
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    PERIOD          reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    statement                      shift and go to state 35
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    act_generate_labels            shift and go to state 46
    proc_call_name                 shift and go to state 49

state 29

    (82) act_set_varscope_global -> act_delete_local_ident .

    IDENT           reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    WHILE           reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    FOR             reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    BEGIN           reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    READ            reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    WRITE           reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    IF              reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)
    PERIOD          reduce using rule 82 (act_set_varscope_global -> act_delete_local_ident .)


state 30

    (11) subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .

    SEMICOLON       reduce using rule 11 (subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl .)


state 31

    (14) proc_decl -> PROCEDURE proc_name SEMICOLON . inblock
    (19) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 53
    var_decl_part                  shift and go to state 54
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 32

    (15) proc_decl -> PROCEDURE proc_name LPAREN . act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock
    (16) act_proc_args_set -> .

    IDENT           reduce using rule 16 (act_proc_args_set -> .)

    act_proc_args_set              shift and go to state 55

state 33

    (18) proc_name -> IDENT act_insert_prev_proc_ident .

    SEMICOLON       reduce using rule 18 (proc_name -> IDENT act_insert_prev_proc_ident .)
    LPAREN          reduce using rule 18 (proc_name -> IDENT act_insert_prev_proc_ident .)


state 34

    (77) id_list -> id_list COMMA IDENT act_insert_prev_var_ident .

    COMMA           reduce using rule 77 (id_list -> id_list COMMA IDENT act_insert_prev_var_ident .)
    SEMICOLON       reduce using rule 77 (id_list -> id_list COMMA IDENT act_insert_prev_var_ident .)
    RPAREN          reduce using rule 77 (id_list -> id_list COMMA IDENT act_insert_prev_var_ident .)


state 35

    (2) outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement .

    PERIOD          reduce using rule 2 (outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement .)


state 36

    (22) statement -> assignment_statement .

    PERIOD          reduce using rule 22 (statement -> assignment_statement .)
    END             reduce using rule 22 (statement -> assignment_statement .)
    SEMICOLON       reduce using rule 22 (statement -> assignment_statement .)
    ELSE            reduce using rule 22 (statement -> assignment_statement .)


state 37

    (23) statement -> if_statement .

    PERIOD          reduce using rule 23 (statement -> if_statement .)
    END             reduce using rule 23 (statement -> if_statement .)
    SEMICOLON       reduce using rule 23 (statement -> if_statement .)
    ELSE            reduce using rule 23 (statement -> if_statement .)


state 38

    (24) statement -> while_statement .

    PERIOD          reduce using rule 24 (statement -> while_statement .)
    END             reduce using rule 24 (statement -> while_statement .)
    SEMICOLON       reduce using rule 24 (statement -> while_statement .)
    ELSE            reduce using rule 24 (statement -> while_statement .)


state 39

    (25) statement -> for_statement .

    PERIOD          reduce using rule 25 (statement -> for_statement .)
    END             reduce using rule 25 (statement -> for_statement .)
    SEMICOLON       reduce using rule 25 (statement -> for_statement .)
    ELSE            reduce using rule 25 (statement -> for_statement .)


state 40

    (26) statement -> proc_call_statement .

    PERIOD          reduce using rule 26 (statement -> proc_call_statement .)
    END             reduce using rule 26 (statement -> proc_call_statement .)
    SEMICOLON       reduce using rule 26 (statement -> proc_call_statement .)
    ELSE            reduce using rule 26 (statement -> proc_call_statement .)


state 41

    (27) statement -> null_statement .

    PERIOD          reduce using rule 27 (statement -> null_statement .)
    END             reduce using rule 27 (statement -> null_statement .)
    SEMICOLON       reduce using rule 27 (statement -> null_statement .)
    ELSE            reduce using rule 27 (statement -> null_statement .)


state 42

    (28) statement -> block_statement .

    PERIOD          reduce using rule 28 (statement -> block_statement .)
    END             reduce using rule 28 (statement -> block_statement .)
    SEMICOLON       reduce using rule 28 (statement -> block_statement .)
    ELSE            reduce using rule 28 (statement -> block_statement .)


state 43

    (29) statement -> read_statement .

    PERIOD          reduce using rule 29 (statement -> read_statement .)
    END             reduce using rule 29 (statement -> read_statement .)
    SEMICOLON       reduce using rule 29 (statement -> read_statement .)
    ELSE            reduce using rule 29 (statement -> read_statement .)


state 44

    (30) statement -> write_statement .

    PERIOD          reduce using rule 30 (statement -> write_statement .)
    END             reduce using rule 30 (statement -> write_statement .)
    SEMICOLON       reduce using rule 30 (statement -> write_statement .)
    ELSE            reduce using rule 30 (statement -> write_statement .)


state 45

    (31) assignment_statement -> IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident
    (51) proc_call_name -> IDENT . act_lookup_prev_ident
    (80) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 80 (act_lookup_prev_ident -> .)
    LPAREN          reduce using rule 80 (act_lookup_prev_ident -> .)
    PERIOD          reduce using rule 80 (act_lookup_prev_ident -> .)
    END             reduce using rule 80 (act_lookup_prev_ident -> .)
    SEMICOLON       reduce using rule 80 (act_lookup_prev_ident -> .)
    ELSE            reduce using rule 80 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 56

state 46

    (33) if_statement -> act_generate_labels . IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    IF              shift and go to state 57


state 47

    (44) while_statement -> WHILE . act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (34) act_generate_labels -> .

    MINUS           reduce using rule 34 (act_generate_labels -> .)
    LPAREN          reduce using rule 34 (act_generate_labels -> .)
    IDENT           reduce using rule 34 (act_generate_labels -> .)
    NUMBER          reduce using rule 34 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 58

state 48

    (46) for_statement -> FOR . act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (34) act_generate_labels -> .

    IDENT           reduce using rule 34 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 59

state 49

    (49) proc_call_statement -> proc_call_name .
    (50) proc_call_statement -> proc_call_name . LPAREN arg_list RPAREN

    PERIOD          reduce using rule 49 (proc_call_statement -> proc_call_name .)
    END             reduce using rule 49 (proc_call_statement -> proc_call_name .)
    SEMICOLON       reduce using rule 49 (proc_call_statement -> proc_call_name .)
    ELSE            reduce using rule 49 (proc_call_statement -> proc_call_name .)
    LPAREN          shift and go to state 60


state 50

    (54) block_statement -> BEGIN . statement_list END
    (20) statement_list -> . statement_list SEMICOLON statement
    (21) statement_list -> . statement
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    statement_list                 shift and go to state 61
    statement                      shift and go to state 62
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    act_generate_labels            shift and go to state 46
    proc_call_name                 shift and go to state 49

state 51

    (55) read_statement -> READ . LPAREN IDENT act_lookup_prev_ident RPAREN

    LPAREN          shift and go to state 63


state 52

    (56) write_statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 64


state 53

    (14) proc_decl -> PROCEDURE proc_name SEMICOLON inblock .

    SEMICOLON       reduce using rule 14 (proc_decl -> PROCEDURE proc_name SEMICOLON inblock .)


state 54

    (19) inblock -> var_decl_part . statement
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    statement                      shift and go to state 65
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    act_generate_labels            shift and go to state 46
    proc_call_name                 shift and go to state 49

state 55

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set . id_list act_proc_args_done RPAREN SEMICOLON inblock
    (76) id_list -> . IDENT act_insert_prev_var_ident
    (77) id_list -> . id_list COMMA IDENT act_insert_prev_var_ident

    IDENT           shift and go to state 14

    id_list                        shift and go to state 66

state 56

    (31) assignment_statement -> IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident
    (51) proc_call_name -> IDENT act_lookup_prev_ident .

    ASSIGN          shift and go to state 67
    LPAREN          reduce using rule 51 (proc_call_name -> IDENT act_lookup_prev_ident .)
    PERIOD          reduce using rule 51 (proc_call_name -> IDENT act_lookup_prev_ident .)
    END             reduce using rule 51 (proc_call_name -> IDENT act_lookup_prev_ident .)
    SEMICOLON       reduce using rule 51 (proc_call_name -> IDENT act_lookup_prev_ident .)
    ELSE            reduce using rule 51 (proc_call_name -> IDENT act_lookup_prev_ident .)


state 57

    (33) if_statement -> act_generate_labels IF . condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (58) condition -> . expression EQ expression
    (59) condition -> . expression NEQ expression
    (60) condition -> . expression LT expression
    (61) condition -> . expression LE expression
    (62) condition -> . expression GT expression
    (63) condition -> . expression GE expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    condition                      shift and go to state 68
    expression                     shift and go to state 69
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 58

    (44) while_statement -> WHILE act_generate_labels . act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (39) act_insert_jump1 -> .

    MINUS           reduce using rule 39 (act_insert_jump1 -> .)
    LPAREN          reduce using rule 39 (act_insert_jump1 -> .)
    IDENT           reduce using rule 39 (act_insert_jump1 -> .)
    NUMBER          reduce using rule 39 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 78

state 59

    (46) for_statement -> FOR act_generate_labels . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    IDENT           shift and go to state 79


state 60

    (50) proc_call_statement -> proc_call_name LPAREN . arg_list RPAREN
    (52) arg_list -> . expression
    (53) arg_list -> . arg_list COMMA expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    arg_list                       shift and go to state 80
    expression                     shift and go to state 81
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 61

    (54) block_statement -> BEGIN statement_list . END
    (20) statement_list -> statement_list . SEMICOLON statement

    END             shift and go to state 82
    SEMICOLON       shift and go to state 83


state 62

    (21) statement_list -> statement .

    END             reduce using rule 21 (statement_list -> statement .)
    SEMICOLON       reduce using rule 21 (statement_list -> statement .)


state 63

    (55) read_statement -> READ LPAREN . IDENT act_lookup_prev_ident RPAREN

    IDENT           shift and go to state 84


state 64

    (56) write_statement -> WRITE LPAREN . expression RPAREN
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 85
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 65

    (19) inblock -> var_decl_part statement .

    SEMICOLON       reduce using rule 19 (inblock -> var_decl_part statement .)


state 66

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list . act_proc_args_done RPAREN SEMICOLON inblock
    (77) id_list -> id_list . COMMA IDENT act_insert_prev_var_ident
    (17) act_proc_args_done -> .

    COMMA           shift and go to state 21
    RPAREN          reduce using rule 17 (act_proc_args_done -> .)

    act_proc_args_done             shift and go to state 86

state 67

    (31) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 87
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 68

    (33) if_statement -> act_generate_labels IF condition . act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (35) act_insert_br -> .

    THEN            reduce using rule 35 (act_insert_br -> .)

    act_insert_br                  shift and go to state 88

state 69

    (58) condition -> expression . EQ expression
    (59) condition -> expression . NEQ expression
    (60) condition -> expression . LT expression
    (61) condition -> expression . LE expression
    (62) condition -> expression . GT expression
    (63) condition -> expression . GE expression
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    EQ              shift and go to state 89
    NEQ             shift and go to state 90
    LT              shift and go to state 91
    LE              shift and go to state 92
    GT              shift and go to state 93
    GE              shift and go to state 94
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 70

    (64) expression -> term .
    (69) term -> term . MULT f_actor
    (70) term -> term . DIV f_actor

    EQ              reduce using rule 64 (expression -> term .)
    NEQ             reduce using rule 64 (expression -> term .)
    LT              reduce using rule 64 (expression -> term .)
    LE              reduce using rule 64 (expression -> term .)
    GT              reduce using rule 64 (expression -> term .)
    GE              reduce using rule 64 (expression -> term .)
    PLUS            reduce using rule 64 (expression -> term .)
    MINUS           reduce using rule 64 (expression -> term .)
    RPAREN          reduce using rule 64 (expression -> term .)
    COMMA           reduce using rule 64 (expression -> term .)
    PERIOD          reduce using rule 64 (expression -> term .)
    END             reduce using rule 64 (expression -> term .)
    SEMICOLON       reduce using rule 64 (expression -> term .)
    ELSE            reduce using rule 64 (expression -> term .)
    THEN            reduce using rule 64 (expression -> term .)
    DO              reduce using rule 64 (expression -> term .)
    TO              reduce using rule 64 (expression -> term .)
    MULT            shift and go to state 97
    DIV             shift and go to state 98


state 71

    (65) expression -> MINUS . term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    term                           shift and go to state 99
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 72

    (68) term -> f_actor .

    MULT            reduce using rule 68 (term -> f_actor .)
    DIV             reduce using rule 68 (term -> f_actor .)
    EQ              reduce using rule 68 (term -> f_actor .)
    NEQ             reduce using rule 68 (term -> f_actor .)
    LT              reduce using rule 68 (term -> f_actor .)
    LE              reduce using rule 68 (term -> f_actor .)
    GT              reduce using rule 68 (term -> f_actor .)
    GE              reduce using rule 68 (term -> f_actor .)
    PLUS            reduce using rule 68 (term -> f_actor .)
    MINUS           reduce using rule 68 (term -> f_actor .)
    RPAREN          reduce using rule 68 (term -> f_actor .)
    COMMA           reduce using rule 68 (term -> f_actor .)
    PERIOD          reduce using rule 68 (term -> f_actor .)
    END             reduce using rule 68 (term -> f_actor .)
    SEMICOLON       reduce using rule 68 (term -> f_actor .)
    ELSE            reduce using rule 68 (term -> f_actor .)
    THEN            reduce using rule 68 (term -> f_actor .)
    DO              reduce using rule 68 (term -> f_actor .)
    TO              reduce using rule 68 (term -> f_actor .)


state 73

    (71) f_actor -> var_name .

    MULT            reduce using rule 71 (f_actor -> var_name .)
    DIV             reduce using rule 71 (f_actor -> var_name .)
    EQ              reduce using rule 71 (f_actor -> var_name .)
    NEQ             reduce using rule 71 (f_actor -> var_name .)
    LT              reduce using rule 71 (f_actor -> var_name .)
    LE              reduce using rule 71 (f_actor -> var_name .)
    GT              reduce using rule 71 (f_actor -> var_name .)
    GE              reduce using rule 71 (f_actor -> var_name .)
    PLUS            reduce using rule 71 (f_actor -> var_name .)
    MINUS           reduce using rule 71 (f_actor -> var_name .)
    RPAREN          reduce using rule 71 (f_actor -> var_name .)
    COMMA           reduce using rule 71 (f_actor -> var_name .)
    PERIOD          reduce using rule 71 (f_actor -> var_name .)
    END             reduce using rule 71 (f_actor -> var_name .)
    SEMICOLON       reduce using rule 71 (f_actor -> var_name .)
    ELSE            reduce using rule 71 (f_actor -> var_name .)
    THEN            reduce using rule 71 (f_actor -> var_name .)
    DO              reduce using rule 71 (f_actor -> var_name .)
    TO              reduce using rule 71 (f_actor -> var_name .)


state 74

    (72) f_actor -> number .

    MULT            reduce using rule 72 (f_actor -> number .)
    DIV             reduce using rule 72 (f_actor -> number .)
    EQ              reduce using rule 72 (f_actor -> number .)
    NEQ             reduce using rule 72 (f_actor -> number .)
    LT              reduce using rule 72 (f_actor -> number .)
    LE              reduce using rule 72 (f_actor -> number .)
    GT              reduce using rule 72 (f_actor -> number .)
    GE              reduce using rule 72 (f_actor -> number .)
    PLUS            reduce using rule 72 (f_actor -> number .)
    MINUS           reduce using rule 72 (f_actor -> number .)
    RPAREN          reduce using rule 72 (f_actor -> number .)
    COMMA           reduce using rule 72 (f_actor -> number .)
    PERIOD          reduce using rule 72 (f_actor -> number .)
    END             reduce using rule 72 (f_actor -> number .)
    SEMICOLON       reduce using rule 72 (f_actor -> number .)
    ELSE            reduce using rule 72 (f_actor -> number .)
    THEN            reduce using rule 72 (f_actor -> number .)
    DO              reduce using rule 72 (f_actor -> number .)
    TO              reduce using rule 72 (f_actor -> number .)


state 75

    (73) f_actor -> LPAREN . expression RPAREN
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 100
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 76

    (74) var_name -> IDENT . act_lookup_prev_ident
    (80) act_lookup_prev_ident -> .

    MULT            reduce using rule 80 (act_lookup_prev_ident -> .)
    DIV             reduce using rule 80 (act_lookup_prev_ident -> .)
    EQ              reduce using rule 80 (act_lookup_prev_ident -> .)
    NEQ             reduce using rule 80 (act_lookup_prev_ident -> .)
    LT              reduce using rule 80 (act_lookup_prev_ident -> .)
    LE              reduce using rule 80 (act_lookup_prev_ident -> .)
    GT              reduce using rule 80 (act_lookup_prev_ident -> .)
    GE              reduce using rule 80 (act_lookup_prev_ident -> .)
    PLUS            reduce using rule 80 (act_lookup_prev_ident -> .)
    MINUS           reduce using rule 80 (act_lookup_prev_ident -> .)
    RPAREN          reduce using rule 80 (act_lookup_prev_ident -> .)
    COMMA           reduce using rule 80 (act_lookup_prev_ident -> .)
    PERIOD          reduce using rule 80 (act_lookup_prev_ident -> .)
    END             reduce using rule 80 (act_lookup_prev_ident -> .)
    SEMICOLON       reduce using rule 80 (act_lookup_prev_ident -> .)
    ELSE            reduce using rule 80 (act_lookup_prev_ident -> .)
    THEN            reduce using rule 80 (act_lookup_prev_ident -> .)
    DO              reduce using rule 80 (act_lookup_prev_ident -> .)
    TO              reduce using rule 80 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 101

state 77

    (75) number -> NUMBER .

    MULT            reduce using rule 75 (number -> NUMBER .)
    DIV             reduce using rule 75 (number -> NUMBER .)
    EQ              reduce using rule 75 (number -> NUMBER .)
    NEQ             reduce using rule 75 (number -> NUMBER .)
    LT              reduce using rule 75 (number -> NUMBER .)
    LE              reduce using rule 75 (number -> NUMBER .)
    GT              reduce using rule 75 (number -> NUMBER .)
    GE              reduce using rule 75 (number -> NUMBER .)
    PLUS            reduce using rule 75 (number -> NUMBER .)
    MINUS           reduce using rule 75 (number -> NUMBER .)
    RPAREN          reduce using rule 75 (number -> NUMBER .)
    COMMA           reduce using rule 75 (number -> NUMBER .)
    PERIOD          reduce using rule 75 (number -> NUMBER .)
    END             reduce using rule 75 (number -> NUMBER .)
    SEMICOLON       reduce using rule 75 (number -> NUMBER .)
    ELSE            reduce using rule 75 (number -> NUMBER .)
    THEN            reduce using rule 75 (number -> NUMBER .)
    DO              reduce using rule 75 (number -> NUMBER .)
    TO              reduce using rule 75 (number -> NUMBER .)


state 78

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 . act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (36) act_insert_label1 -> .

    MINUS           reduce using rule 36 (act_insert_label1 -> .)
    LPAREN          reduce using rule 36 (act_insert_label1 -> .)
    IDENT           reduce using rule 36 (act_insert_label1 -> .)
    NUMBER          reduce using rule 36 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 102

state 79

    (46) for_statement -> FOR act_generate_labels IDENT . act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (80) act_lookup_prev_ident -> .

    ASSIGN          reduce using rule 80 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 103

state 80

    (50) proc_call_statement -> proc_call_name LPAREN arg_list . RPAREN
    (53) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 81

    (52) arg_list -> expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    RPAREN          reduce using rule 52 (arg_list -> expression .)
    COMMA           reduce using rule 52 (arg_list -> expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 82

    (54) block_statement -> BEGIN statement_list END .

    PERIOD          reduce using rule 54 (block_statement -> BEGIN statement_list END .)
    END             reduce using rule 54 (block_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 54 (block_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 54 (block_statement -> BEGIN statement_list END .)


state 83

    (20) statement_list -> statement_list SEMICOLON . statement
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    statement                      shift and go to state 106
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    act_generate_labels            shift and go to state 46
    proc_call_name                 shift and go to state 49

state 84

    (55) read_statement -> READ LPAREN IDENT . act_lookup_prev_ident RPAREN
    (80) act_lookup_prev_ident -> .

    RPAREN          reduce using rule 80 (act_lookup_prev_ident -> .)

    act_lookup_prev_ident          shift and go to state 107

state 85

    (56) write_statement -> WRITE LPAREN expression . RPAREN
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 86

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done . RPAREN SEMICOLON inblock

    RPAREN          shift and go to state 109


state 87

    (31) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term
    (32) act_assign_ident -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    PERIOD          reduce using rule 32 (act_assign_ident -> .)
    END             reduce using rule 32 (act_assign_ident -> .)
    SEMICOLON       reduce using rule 32 (act_assign_ident -> .)
    ELSE            reduce using rule 32 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 110

state 88

    (33) if_statement -> act_generate_labels IF condition act_insert_br . THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3

    THEN            shift and go to state 111


state 89

    (58) condition -> expression EQ . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 112
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 90

    (59) condition -> expression NEQ . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 113
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 91

    (60) condition -> expression LT . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 114
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 92

    (61) condition -> expression LE . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 115
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 93

    (62) condition -> expression GT . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 116
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 94

    (63) condition -> expression GE . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 117
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 95

    (66) expression -> expression PLUS . term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    term                           shift and go to state 118
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 96

    (67) expression -> expression MINUS . term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    term                           shift and go to state 119
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 97

    (69) term -> term MULT . f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    f_actor                        shift and go to state 120
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 98

    (70) term -> term DIV . f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    f_actor                        shift and go to state 121
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 99

    (65) expression -> MINUS term .
    (69) term -> term . MULT f_actor
    (70) term -> term . DIV f_actor

    EQ              reduce using rule 65 (expression -> MINUS term .)
    NEQ             reduce using rule 65 (expression -> MINUS term .)
    LT              reduce using rule 65 (expression -> MINUS term .)
    LE              reduce using rule 65 (expression -> MINUS term .)
    GT              reduce using rule 65 (expression -> MINUS term .)
    GE              reduce using rule 65 (expression -> MINUS term .)
    PLUS            reduce using rule 65 (expression -> MINUS term .)
    MINUS           reduce using rule 65 (expression -> MINUS term .)
    RPAREN          reduce using rule 65 (expression -> MINUS term .)
    COMMA           reduce using rule 65 (expression -> MINUS term .)
    PERIOD          reduce using rule 65 (expression -> MINUS term .)
    END             reduce using rule 65 (expression -> MINUS term .)
    SEMICOLON       reduce using rule 65 (expression -> MINUS term .)
    ELSE            reduce using rule 65 (expression -> MINUS term .)
    THEN            reduce using rule 65 (expression -> MINUS term .)
    DO              reduce using rule 65 (expression -> MINUS term .)
    TO              reduce using rule 65 (expression -> MINUS term .)
    MULT            shift and go to state 97
    DIV             shift and go to state 98


state 100

    (73) f_actor -> LPAREN expression . RPAREN
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 101

    (74) var_name -> IDENT act_lookup_prev_ident .

    MULT            reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    DIV             reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    EQ              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    NEQ             reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    LT              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    LE              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    GT              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    GE              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    PLUS            reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    MINUS           reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    RPAREN          reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    COMMA           reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    PERIOD          reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    END             reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    SEMICOLON       reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    ELSE            reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    THEN            reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    DO              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)
    TO              reduce using rule 74 (var_name -> IDENT act_lookup_prev_ident .)


state 102

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 . condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (58) condition -> . expression EQ expression
    (59) condition -> . expression NEQ expression
    (60) condition -> . expression LT expression
    (61) condition -> . expression LE expression
    (62) condition -> . expression GT expression
    (63) condition -> . expression GE expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    condition                      shift and go to state 123
    expression                     shift and go to state 69
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 103

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident . ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    ASSIGN          shift and go to state 124


state 104

    (50) proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .

    PERIOD          reduce using rule 50 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    END             reduce using rule 50 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    SEMICOLON       reduce using rule 50 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 50 (proc_call_statement -> proc_call_name LPAREN arg_list RPAREN .)


state 105

    (53) arg_list -> arg_list COMMA . expression
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 125
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 106

    (20) statement_list -> statement_list SEMICOLON statement .

    END             reduce using rule 20 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 20 (statement_list -> statement_list SEMICOLON statement .)


state 107

    (55) read_statement -> READ LPAREN IDENT act_lookup_prev_ident . RPAREN

    RPAREN          shift and go to state 126


state 108

    (56) write_statement -> WRITE LPAREN expression RPAREN .

    PERIOD          reduce using rule 56 (write_statement -> WRITE LPAREN expression RPAREN .)
    END             reduce using rule 56 (write_statement -> WRITE LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 56 (write_statement -> WRITE LPAREN expression RPAREN .)
    ELSE            reduce using rule 56 (write_statement -> WRITE LPAREN expression RPAREN .)


state 109

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN . SEMICOLON inblock

    SEMICOLON       shift and go to state 127


state 110

    (31) assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .

    PERIOD          reduce using rule 31 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    END             reduce using rule 31 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    SEMICOLON       reduce using rule 31 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)
    ELSE            reduce using rule 31 (assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident .)


state 111

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN . act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (36) act_insert_label1 -> .

    IDENT           reduce using rule 36 (act_insert_label1 -> .)
    WHILE           reduce using rule 36 (act_insert_label1 -> .)
    FOR             reduce using rule 36 (act_insert_label1 -> .)
    BEGIN           reduce using rule 36 (act_insert_label1 -> .)
    READ            reduce using rule 36 (act_insert_label1 -> .)
    WRITE           reduce using rule 36 (act_insert_label1 -> .)
    ELSE            reduce using rule 36 (act_insert_label1 -> .)
    IF              reduce using rule 36 (act_insert_label1 -> .)
    PERIOD          reduce using rule 36 (act_insert_label1 -> .)
    END             reduce using rule 36 (act_insert_label1 -> .)
    SEMICOLON       reduce using rule 36 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 128

state 112

    (58) condition -> expression EQ expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 58 (condition -> expression EQ expression .)
    DO              reduce using rule 58 (condition -> expression EQ expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 113

    (59) condition -> expression NEQ expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 59 (condition -> expression NEQ expression .)
    DO              reduce using rule 59 (condition -> expression NEQ expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 114

    (60) condition -> expression LT expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 60 (condition -> expression LT expression .)
    DO              reduce using rule 60 (condition -> expression LT expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 115

    (61) condition -> expression LE expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 61 (condition -> expression LE expression .)
    DO              reduce using rule 61 (condition -> expression LE expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 116

    (62) condition -> expression GT expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 62 (condition -> expression GT expression .)
    DO              reduce using rule 62 (condition -> expression GT expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 117

    (63) condition -> expression GE expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    THEN            reduce using rule 63 (condition -> expression GE expression .)
    DO              reduce using rule 63 (condition -> expression GE expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 118

    (66) expression -> expression PLUS term .
    (69) term -> term . MULT f_actor
    (70) term -> term . DIV f_actor

    EQ              reduce using rule 66 (expression -> expression PLUS term .)
    NEQ             reduce using rule 66 (expression -> expression PLUS term .)
    LT              reduce using rule 66 (expression -> expression PLUS term .)
    LE              reduce using rule 66 (expression -> expression PLUS term .)
    GT              reduce using rule 66 (expression -> expression PLUS term .)
    GE              reduce using rule 66 (expression -> expression PLUS term .)
    PLUS            reduce using rule 66 (expression -> expression PLUS term .)
    MINUS           reduce using rule 66 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 66 (expression -> expression PLUS term .)
    COMMA           reduce using rule 66 (expression -> expression PLUS term .)
    PERIOD          reduce using rule 66 (expression -> expression PLUS term .)
    END             reduce using rule 66 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 66 (expression -> expression PLUS term .)
    ELSE            reduce using rule 66 (expression -> expression PLUS term .)
    THEN            reduce using rule 66 (expression -> expression PLUS term .)
    DO              reduce using rule 66 (expression -> expression PLUS term .)
    TO              reduce using rule 66 (expression -> expression PLUS term .)
    MULT            shift and go to state 97
    DIV             shift and go to state 98


state 119

    (67) expression -> expression MINUS term .
    (69) term -> term . MULT f_actor
    (70) term -> term . DIV f_actor

    EQ              reduce using rule 67 (expression -> expression MINUS term .)
    NEQ             reduce using rule 67 (expression -> expression MINUS term .)
    LT              reduce using rule 67 (expression -> expression MINUS term .)
    LE              reduce using rule 67 (expression -> expression MINUS term .)
    GT              reduce using rule 67 (expression -> expression MINUS term .)
    GE              reduce using rule 67 (expression -> expression MINUS term .)
    PLUS            reduce using rule 67 (expression -> expression MINUS term .)
    MINUS           reduce using rule 67 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 67 (expression -> expression MINUS term .)
    COMMA           reduce using rule 67 (expression -> expression MINUS term .)
    PERIOD          reduce using rule 67 (expression -> expression MINUS term .)
    END             reduce using rule 67 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 67 (expression -> expression MINUS term .)
    ELSE            reduce using rule 67 (expression -> expression MINUS term .)
    THEN            reduce using rule 67 (expression -> expression MINUS term .)
    DO              reduce using rule 67 (expression -> expression MINUS term .)
    TO              reduce using rule 67 (expression -> expression MINUS term .)
    MULT            shift and go to state 97
    DIV             shift and go to state 98


state 120

    (69) term -> term MULT f_actor .

    MULT            reduce using rule 69 (term -> term MULT f_actor .)
    DIV             reduce using rule 69 (term -> term MULT f_actor .)
    EQ              reduce using rule 69 (term -> term MULT f_actor .)
    NEQ             reduce using rule 69 (term -> term MULT f_actor .)
    LT              reduce using rule 69 (term -> term MULT f_actor .)
    LE              reduce using rule 69 (term -> term MULT f_actor .)
    GT              reduce using rule 69 (term -> term MULT f_actor .)
    GE              reduce using rule 69 (term -> term MULT f_actor .)
    PLUS            reduce using rule 69 (term -> term MULT f_actor .)
    MINUS           reduce using rule 69 (term -> term MULT f_actor .)
    RPAREN          reduce using rule 69 (term -> term MULT f_actor .)
    COMMA           reduce using rule 69 (term -> term MULT f_actor .)
    PERIOD          reduce using rule 69 (term -> term MULT f_actor .)
    END             reduce using rule 69 (term -> term MULT f_actor .)
    SEMICOLON       reduce using rule 69 (term -> term MULT f_actor .)
    ELSE            reduce using rule 69 (term -> term MULT f_actor .)
    THEN            reduce using rule 69 (term -> term MULT f_actor .)
    DO              reduce using rule 69 (term -> term MULT f_actor .)
    TO              reduce using rule 69 (term -> term MULT f_actor .)


state 121

    (70) term -> term DIV f_actor .

    MULT            reduce using rule 70 (term -> term DIV f_actor .)
    DIV             reduce using rule 70 (term -> term DIV f_actor .)
    EQ              reduce using rule 70 (term -> term DIV f_actor .)
    NEQ             reduce using rule 70 (term -> term DIV f_actor .)
    LT              reduce using rule 70 (term -> term DIV f_actor .)
    LE              reduce using rule 70 (term -> term DIV f_actor .)
    GT              reduce using rule 70 (term -> term DIV f_actor .)
    GE              reduce using rule 70 (term -> term DIV f_actor .)
    PLUS            reduce using rule 70 (term -> term DIV f_actor .)
    MINUS           reduce using rule 70 (term -> term DIV f_actor .)
    RPAREN          reduce using rule 70 (term -> term DIV f_actor .)
    COMMA           reduce using rule 70 (term -> term DIV f_actor .)
    PERIOD          reduce using rule 70 (term -> term DIV f_actor .)
    END             reduce using rule 70 (term -> term DIV f_actor .)
    SEMICOLON       reduce using rule 70 (term -> term DIV f_actor .)
    ELSE            reduce using rule 70 (term -> term DIV f_actor .)
    THEN            reduce using rule 70 (term -> term DIV f_actor .)
    DO              reduce using rule 70 (term -> term DIV f_actor .)
    TO              reduce using rule 70 (term -> term DIV f_actor .)


state 122

    (73) f_actor -> LPAREN expression RPAREN .

    MULT            reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    LT              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    LE              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    GT              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    GE              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    END             reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    DO              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)
    TO              reduce using rule 73 (f_actor -> LPAREN expression RPAREN .)


state 123

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition . act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (45) act_insert_br_while -> .

    DO              reduce using rule 45 (act_insert_br_while -> .)

    act_insert_br_while            shift and go to state 129

state 124

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN . expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 130
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 125

    (53) arg_list -> arg_list COMMA expression .
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term

    RPAREN          reduce using rule 53 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 53 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 126

    (55) read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN .

    PERIOD          reduce using rule 55 (read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN .)
    END             reduce using rule 55 (read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN .)
    SEMICOLON       reduce using rule 55 (read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN .)
    ELSE            reduce using rule 55 (read_statement -> READ LPAREN IDENT act_lookup_prev_ident RPAREN .)


state 127

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON . inblock
    (19) inblock -> . var_decl_part statement
    (4) var_decl_part -> . var_decl_list SEMICOLON
    (5) var_decl_part -> .
    (6) var_decl_list -> . var_decl_list SEMICOLON var_decl
    (7) var_decl_list -> . var_decl
    (8) var_decl -> . VAR id_list

    IDENT           reduce using rule 5 (var_decl_part -> .)
    WHILE           reduce using rule 5 (var_decl_part -> .)
    FOR             reduce using rule 5 (var_decl_part -> .)
    BEGIN           reduce using rule 5 (var_decl_part -> .)
    READ            reduce using rule 5 (var_decl_part -> .)
    WRITE           reduce using rule 5 (var_decl_part -> .)
    IF              reduce using rule 5 (var_decl_part -> .)
    SEMICOLON       reduce using rule 5 (var_decl_part -> .)
    VAR             shift and go to state 9

    inblock                        shift and go to state 131
    var_decl_part                  shift and go to state 54
    var_decl_list                  shift and go to state 7
    var_decl                       shift and go to state 8

state 128

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 . statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    ELSE            reduce using rule 57 (null_statement -> .)
    PERIOD          reduce using rule 57 (null_statement -> .)
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 46
    statement                      shift and go to state 132
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    proc_call_name                 shift and go to state 49

state 129

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while . DO act_insert_label2 statement act_insert_jump1 act_insert_label3

    DO              shift and go to state 133


state 130

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression . act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term
    (32) act_assign_ident -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TO              reduce using rule 32 (act_assign_ident -> .)

    act_assign_ident               shift and go to state 134

state 131

    (15) proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .

    SEMICOLON       reduce using rule 15 (proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set id_list act_proc_args_done RPAREN SEMICOLON inblock .)


state 132

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement . act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (41) act_insert_jump3 -> .

    ELSE            reduce using rule 41 (act_insert_jump3 -> .)
    PERIOD          reduce using rule 41 (act_insert_jump3 -> .)
    END             reduce using rule 41 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 41 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 135

state 133

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO . act_insert_label2 statement act_insert_jump1 act_insert_label3
    (37) act_insert_label2 -> .

    IDENT           reduce using rule 37 (act_insert_label2 -> .)
    WHILE           reduce using rule 37 (act_insert_label2 -> .)
    FOR             reduce using rule 37 (act_insert_label2 -> .)
    BEGIN           reduce using rule 37 (act_insert_label2 -> .)
    READ            reduce using rule 37 (act_insert_label2 -> .)
    WRITE           reduce using rule 37 (act_insert_label2 -> .)
    IF              reduce using rule 37 (act_insert_label2 -> .)
    PERIOD          reduce using rule 37 (act_insert_label2 -> .)
    END             reduce using rule 37 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 37 (act_insert_label2 -> .)
    ELSE            reduce using rule 37 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 136

state 134

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident . act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (39) act_insert_jump1 -> .

    TO              reduce using rule 39 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 137

state 135

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 . act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (37) act_insert_label2 -> .

    ELSE            reduce using rule 37 (act_insert_label2 -> .)
    PERIOD          reduce using rule 37 (act_insert_label2 -> .)
    END             reduce using rule 37 (act_insert_label2 -> .)
    SEMICOLON       reduce using rule 37 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 138

state 136

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 . statement act_insert_jump1 act_insert_label3
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    ELSE            reduce using rule 57 (null_statement -> .)
    PERIOD          reduce using rule 57 (null_statement -> .)
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 46
    statement                      shift and go to state 139
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    proc_call_name                 shift and go to state 49

state 137

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 . act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (36) act_insert_label1 -> .

    TO              reduce using rule 36 (act_insert_label1 -> .)

    act_insert_label1              shift and go to state 140

state 138

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 . else_statement act_insert_jump3 act_insert_label3
    (42) else_statement -> . ELSE statement
    (43) else_statement -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 142
    PERIOD          reduce using rule 43 (else_statement -> .)
    END             reduce using rule 43 (else_statement -> .)
    SEMICOLON       reduce using rule 43 (else_statement -> .)

  ! ELSE            [ reduce using rule 43 (else_statement -> .) ]

    else_statement                 shift and go to state 141

state 139

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement . act_insert_jump1 act_insert_label3
    (39) act_insert_jump1 -> .

    PERIOD          reduce using rule 39 (act_insert_jump1 -> .)
    END             reduce using rule 39 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 39 (act_insert_jump1 -> .)
    ELSE            reduce using rule 39 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 143

state 140

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 . TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3

    TO              shift and go to state 144


state 141

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement . act_insert_jump3 act_insert_label3
    (41) act_insert_jump3 -> .

    PERIOD          reduce using rule 41 (act_insert_jump3 -> .)
    END             reduce using rule 41 (act_insert_jump3 -> .)
    SEMICOLON       reduce using rule 41 (act_insert_jump3 -> .)
    ELSE            reduce using rule 41 (act_insert_jump3 -> .)

    act_insert_jump3               shift and go to state 145

state 142

    (42) else_statement -> ELSE . statement
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    ELSE            reduce using rule 57 (null_statement -> .)
    PERIOD          reduce using rule 57 (null_statement -> .)
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    statement                      shift and go to state 146
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    act_generate_labels            shift and go to state 46
    proc_call_name                 shift and go to state 49

state 143

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 . act_insert_label3
    (38) act_insert_label3 -> .

    PERIOD          reduce using rule 38 (act_insert_label3 -> .)
    END             reduce using rule 38 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_label3 -> .)
    ELSE            reduce using rule 38 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 147

state 144

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO . expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (64) expression -> . term
    (65) expression -> . MINUS term
    (66) expression -> . expression PLUS term
    (67) expression -> . expression MINUS term
    (68) term -> . f_actor
    (69) term -> . term MULT f_actor
    (70) term -> . term DIV f_actor
    (71) f_actor -> . var_name
    (72) f_actor -> . number
    (73) f_actor -> . LPAREN expression RPAREN
    (74) var_name -> . IDENT act_lookup_prev_ident
    (75) number -> . NUMBER

    MINUS           shift and go to state 71
    LPAREN          shift and go to state 75
    IDENT           shift and go to state 76
    NUMBER          shift and go to state 77

    expression                     shift and go to state 148
    term                           shift and go to state 70
    f_actor                        shift and go to state 72
    var_name                       shift and go to state 73
    number                         shift and go to state 74

state 145

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 . act_insert_label3
    (38) act_insert_label3 -> .

    PERIOD          reduce using rule 38 (act_insert_label3 -> .)
    END             reduce using rule 38 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_label3 -> .)
    ELSE            reduce using rule 38 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 149

state 146

    (42) else_statement -> ELSE statement .

    ELSE            reduce using rule 42 (else_statement -> ELSE statement .)
    PERIOD          reduce using rule 42 (else_statement -> ELSE statement .)
    END             reduce using rule 42 (else_statement -> ELSE statement .)
    SEMICOLON       reduce using rule 42 (else_statement -> ELSE statement .)


state 147

    (44) while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 44 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 44 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 44 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 44 (while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3 .)


state 148

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression . act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (66) expression -> expression . PLUS term
    (67) expression -> expression . MINUS term
    (47) act_insert_br_for -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    DO              reduce using rule 47 (act_insert_br_for -> .)

    act_insert_br_for              shift and go to state 150

state 149

    (33) if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .

    PERIOD          reduce using rule 33 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    END             reduce using rule 33 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    SEMICOLON       reduce using rule 33 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)
    ELSE            reduce using rule 33 (if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3 .)


state 150

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for . act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (37) act_insert_label2 -> .

    DO              reduce using rule 37 (act_insert_label2 -> .)

    act_insert_label2              shift and go to state 151

state 151

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 . DO statement act_increment_itr act_insert_jump1 act_insert_label3

    DO              shift and go to state 152


state 152

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO . statement act_increment_itr act_insert_jump1 act_insert_label3
    (22) statement -> . assignment_statement
    (23) statement -> . if_statement
    (24) statement -> . while_statement
    (25) statement -> . for_statement
    (26) statement -> . proc_call_statement
    (27) statement -> . null_statement
    (28) statement -> . block_statement
    (29) statement -> . read_statement
    (30) statement -> . write_statement
    (31) assignment_statement -> . IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident
    (33) if_statement -> . act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3
    (44) while_statement -> . WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3
    (46) for_statement -> . FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3
    (49) proc_call_statement -> . proc_call_name
    (50) proc_call_statement -> . proc_call_name LPAREN arg_list RPAREN
    (57) null_statement -> .
    (54) block_statement -> . BEGIN statement_list END
    (55) read_statement -> . READ LPAREN IDENT act_lookup_prev_ident RPAREN
    (56) write_statement -> . WRITE LPAREN expression RPAREN
    (34) act_generate_labels -> .
    (51) proc_call_name -> . IDENT act_lookup_prev_ident

    IDENT           shift and go to state 45
    WHILE           shift and go to state 47
    FOR             shift and go to state 48
    ELSE            reduce using rule 57 (null_statement -> .)
    PERIOD          reduce using rule 57 (null_statement -> .)
    END             reduce using rule 57 (null_statement -> .)
    SEMICOLON       reduce using rule 57 (null_statement -> .)
    BEGIN           shift and go to state 50
    READ            shift and go to state 51
    WRITE           shift and go to state 52
    IF              reduce using rule 34 (act_generate_labels -> .)

    act_generate_labels            shift and go to state 46
    statement                      shift and go to state 153
    assignment_statement           shift and go to state 36
    if_statement                   shift and go to state 37
    while_statement                shift and go to state 38
    for_statement                  shift and go to state 39
    proc_call_statement            shift and go to state 40
    null_statement                 shift and go to state 41
    block_statement                shift and go to state 42
    read_statement                 shift and go to state 43
    write_statement                shift and go to state 44
    proc_call_name                 shift and go to state 49

state 153

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement . act_increment_itr act_insert_jump1 act_insert_label3
    (48) act_increment_itr -> .

    PERIOD          reduce using rule 48 (act_increment_itr -> .)
    END             reduce using rule 48 (act_increment_itr -> .)
    SEMICOLON       reduce using rule 48 (act_increment_itr -> .)
    ELSE            reduce using rule 48 (act_increment_itr -> .)

    act_increment_itr              shift and go to state 154

state 154

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr . act_insert_jump1 act_insert_label3
    (39) act_insert_jump1 -> .

    PERIOD          reduce using rule 39 (act_insert_jump1 -> .)
    END             reduce using rule 39 (act_insert_jump1 -> .)
    SEMICOLON       reduce using rule 39 (act_insert_jump1 -> .)
    ELSE            reduce using rule 39 (act_insert_jump1 -> .)

    act_insert_jump1               shift and go to state 155

state 155

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 . act_insert_label3
    (38) act_insert_label3 -> .

    PERIOD          reduce using rule 38 (act_insert_label3 -> .)
    END             reduce using rule 38 (act_insert_label3 -> .)
    SEMICOLON       reduce using rule 38 (act_insert_label3 -> .)
    ELSE            reduce using rule 38 (act_insert_label3 -> .)

    act_insert_label3              shift and go to state 156

state 156

    (46) for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .

    PERIOD          reduce using rule 46 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    END             reduce using rule 46 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    SEMICOLON       reduce using rule 46 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)
    ELSE            reduce using rule 46 (for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 138 resolved as shift
