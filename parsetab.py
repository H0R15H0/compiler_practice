
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BEGIN COMMA DIV DO ELSE END EQ FOR FUNCTION GE GT IDENT IF INTERVAL LBRACKET LE LPAREN LT MINUS MULT NEQ NUMBER PERIOD PLUS PROCEDURE PROGRAM RBRACKET READ RPAREN SEMICOLON THEN TO VAR WHILE WRITE\n    program : PROGRAM IDENT act_insert_prev_var_ident SEMICOLON outblock PERIOD\n    \n    outblock : var_decl_part act_set_varscope_local subprog_decl_part act_set_varscope_global statement\n    \n    var_decl_part : var_decl_list SEMICOLON\n                  |\n    \n    var_decl_list : var_decl_list SEMICOLON var_decl\n        | var_decl\n    \n    var_decl : VAR id_list\n    \n    subprog_decl_part : subprog_decl_list SEMICOLON\n        | \n    \n    subprog_decl_list : subprog_decl_list SEMICOLON subprog_decl\n        | subprog_decl\n    \n    subprog_decl : proc_decl\n    \n    proc_decl : PROCEDURE proc_name SEMICOLON inblock\n    \n    proc_name : IDENT act_insert_prev_proc_ident\n    \n    inblock : var_decl_part statement\n    \n    statement_list : statement_list SEMICOLON statement\n        | statement\n    \n    statement : assignment_statement\n        | if_statement\n        | while_statement\n        | for_statement\n        | proc_call_statement\n        | null_statement\n        | block_statement\n        | read_statement\n        | write_statement\n    \n    assignment_statement : IDENT act_lookup ASSIGN expression\n    \n    if_statement : IF condition THEN statement else_statement\n    \n    else_statement : ELSE statement\n        | \n    \n    while_statement : WHILE condition DO statement\n    \n    for_statement : FOR IDENT act_lookup ASSIGN expression TO expression DO statement\n    \n    proc_call_statement : proc_call_name\n    \n    proc_call_name : IDENT act_lookup\n    \n    block_statement : BEGIN statement_list END\n    \n    read_statement : READ LPAREN IDENT act_lookup RPAREN\n    \n    write_statement : WRITE LPAREN expression RPAREN\n    \n    null_statement : \n    \n    condition : expression EQ expression\n        | expression NEQ expression\n        | expression LT expression\n        | expression LE expression\n        | expression GT expression\n        | expression GE expression\n    \n    expression : term\n        | MINUS term\n        | expression PLUS term\n        | expression MINUS term\n    \n    term : f_actor\n        | term MULT f_actor\n        | term DIV f_actor\n    \n    f_actor : var_name\n        | number\n        | LPAREN expression RPAREN\n    \n    var_name : IDENT act_lookup\n    \n    number : NUMBER\n    \n    id_list : IDENT act_insert_prev_var_ident\n        | id_list COMMA IDENT act_insert_prev_var_ident\n    \n    act_insert_prev_var_ident :\n    \n    act_insert_prev_proc_ident :\n    \n    act_lookup :\n    \n    act_set_varscope_local :\n    \n    act_set_varscope_global : act_delete_local_ident\n    \n    act_delete_local_ident :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,11,],[0,-1,]),'IDENT':([2,5,7,10,12,13,16,20,22,24,25,26,41,42,43,45,49,56,60,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,86,89,107,112,116,118,],[3,-4,-62,15,-9,-3,-64,28,29,40,-63,-8,61,61,64,40,-4,61,61,90,61,40,61,40,61,61,61,61,61,61,61,61,61,61,40,40,61,40,61,40,]),'SEMICOLON':([3,4,8,9,13,14,15,17,18,19,21,23,27,28,29,31,32,33,34,35,36,37,38,39,40,44,45,48,49,50,51,52,55,57,58,59,61,62,65,66,69,70,72,83,85,86,88,89,92,93,94,101,102,103,104,105,106,108,110,111,112,114,115,118,119,],[-59,5,13,-6,-3,-7,-59,26,-11,-12,-5,-57,49,-60,-59,-18,-19,-20,-21,-22,-23,-24,-25,-26,-61,-33,-38,-10,-4,-14,-58,-34,-45,-49,-52,-53,-61,-56,89,-17,-13,-38,-38,-46,-55,-38,-35,-38,-15,-27,-30,-47,-48,-50,-51,-54,-31,-16,-37,-28,-38,-36,-29,-38,-32,]),'PROCEDURE':([5,7,12,13,26,],[-4,-62,20,-3,20,]),'IF':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,41,-63,-8,41,-4,41,41,41,41,41,41,]),'WHILE':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,42,-63,-8,42,-4,42,42,42,42,42,42,]),'FOR':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,43,-63,-8,43,-4,43,43,43,43,43,43,]),'BEGIN':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,45,-63,-8,45,-4,45,45,45,45,45,45,]),'READ':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,46,-63,-8,46,-4,46,46,46,46,46,46,]),'WRITE':([5,7,12,13,16,24,25,26,45,49,70,72,86,89,112,118,],[-4,-62,-9,-3,-64,47,-63,-8,47,-4,47,47,47,47,47,47,]),'PERIOD':([5,6,7,12,13,16,24,25,26,30,31,32,33,34,35,36,37,38,39,40,44,52,55,57,58,59,61,62,72,83,85,86,88,93,94,101,102,103,104,105,106,110,111,112,114,115,118,119,],[-4,11,-62,-9,-3,-64,-38,-63,-8,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-61,-33,-34,-45,-49,-52,-53,-61,-56,-38,-46,-55,-38,-35,-27,-30,-47,-48,-50,-51,-54,-31,-37,-28,-38,-36,-29,-38,-32,]),'VAR':([5,13,49,],[10,10,10,]),'COMMA':([14,15,23,29,51,],[22,-59,-57,-59,-58,]),'END':([31,32,33,34,35,36,37,38,39,40,44,45,52,55,57,58,59,61,62,65,66,72,83,85,86,88,89,93,94,101,102,103,104,105,106,108,110,111,112,114,115,118,119,],[-18,-19,-20,-21,-22,-23,-24,-25,-26,-61,-33,-38,-34,-45,-49,-52,-53,-61,-56,88,-17,-38,-46,-55,-38,-35,-38,-27,-30,-47,-48,-50,-51,-54,-31,-16,-37,-28,-38,-36,-29,-38,-32,]),'ELSE':([31,32,33,34,35,36,37,38,39,40,44,52,55,57,58,59,61,62,72,83,85,86,88,93,94,101,102,103,104,105,106,110,111,112,114,115,118,119,],[-18,-19,-20,-21,-22,-23,-24,-25,-26,-61,-33,-34,-45,-49,-52,-53,-61,-56,-38,-46,-55,-38,-35,-27,112,-47,-48,-50,-51,-54,-31,-37,-28,-38,-36,-29,-38,-32,]),'ASSIGN':([40,52,64,87,],[-61,71,-61,107,]),'MINUS':([41,42,54,55,57,58,59,60,61,62,68,71,73,74,75,76,77,78,83,84,85,91,93,95,96,97,98,99,100,101,102,103,104,105,107,113,116,117,],[56,56,80,-45,-49,-52,-53,56,-61,-56,56,56,56,56,56,56,56,56,-46,80,-55,80,80,80,80,80,80,80,80,-47,-48,-50,-51,-54,56,80,56,80,]),'LPAREN':([41,42,46,47,56,60,68,71,73,74,75,76,77,78,79,80,81,82,107,116,],[60,60,67,68,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'NUMBER':([41,42,56,60,68,71,73,74,75,76,77,78,79,80,81,82,107,116,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'THEN':([53,55,57,58,59,61,62,83,85,95,96,97,98,99,100,101,102,103,104,105,],[72,-45,-49,-52,-53,-61,-56,-46,-55,-39,-40,-41,-42,-43,-44,-47,-48,-50,-51,-54,]),'EQ':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[73,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'NEQ':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[74,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'LT':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[75,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'LE':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[76,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'GT':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[77,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'GE':([54,55,57,58,59,61,62,83,85,101,102,103,104,105,],[78,-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,]),'PLUS':([54,55,57,58,59,61,62,83,84,85,91,93,95,96,97,98,99,100,101,102,103,104,105,113,117,],[79,-45,-49,-52,-53,-61,-56,-46,79,-55,79,79,79,79,79,79,79,79,-47,-48,-50,-51,-54,79,79,]),'RPAREN':([55,57,58,59,61,62,83,84,85,90,91,101,102,103,104,105,109,],[-45,-49,-52,-53,-61,-56,-46,105,-55,-61,110,-47,-48,-50,-51,-54,114,]),'DO':([55,57,58,59,61,62,63,83,85,95,96,97,98,99,100,101,102,103,104,105,117,],[-45,-49,-52,-53,-61,-56,86,-46,-55,-39,-40,-41,-42,-43,-44,-47,-48,-50,-51,-54,118,]),'TO':([55,57,58,59,61,62,83,85,101,102,103,104,105,113,],[-45,-49,-52,-53,-61,-56,-46,-55,-47,-48,-50,-51,-54,116,]),'MULT':([55,57,58,59,61,62,83,85,101,102,103,104,105,],[81,-49,-52,-53,-61,-56,81,-55,81,81,-50,-51,-54,]),'DIV':([55,57,58,59,61,62,83,85,101,102,103,104,105,],[82,-49,-52,-53,-61,-56,82,-55,82,82,-50,-51,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'act_insert_prev_var_ident':([3,15,29,],[4,23,51,]),'outblock':([5,],[6,]),'var_decl_part':([5,49,],[7,70,]),'var_decl_list':([5,49,],[8,8,]),'var_decl':([5,13,49,],[9,21,9,]),'act_set_varscope_local':([7,],[12,]),'id_list':([10,],[14,]),'subprog_decl_part':([12,],[16,]),'subprog_decl_list':([12,],[17,]),'subprog_decl':([12,26,],[18,48,]),'proc_decl':([12,26,],[19,19,]),'act_set_varscope_global':([16,],[24,]),'act_delete_local_ident':([16,],[25,]),'proc_name':([20,],[27,]),'statement':([24,45,70,72,86,89,112,118,],[30,66,92,94,106,108,115,119,]),'assignment_statement':([24,45,70,72,86,89,112,118,],[31,31,31,31,31,31,31,31,]),'if_statement':([24,45,70,72,86,89,112,118,],[32,32,32,32,32,32,32,32,]),'while_statement':([24,45,70,72,86,89,112,118,],[33,33,33,33,33,33,33,33,]),'for_statement':([24,45,70,72,86,89,112,118,],[34,34,34,34,34,34,34,34,]),'proc_call_statement':([24,45,70,72,86,89,112,118,],[35,35,35,35,35,35,35,35,]),'null_statement':([24,45,70,72,86,89,112,118,],[36,36,36,36,36,36,36,36,]),'block_statement':([24,45,70,72,86,89,112,118,],[37,37,37,37,37,37,37,37,]),'read_statement':([24,45,70,72,86,89,112,118,],[38,38,38,38,38,38,38,38,]),'write_statement':([24,45,70,72,86,89,112,118,],[39,39,39,39,39,39,39,39,]),'proc_call_name':([24,45,70,72,86,89,112,118,],[44,44,44,44,44,44,44,44,]),'act_insert_prev_proc_ident':([28,],[50,]),'act_lookup':([40,61,64,90,],[52,85,87,109,]),'condition':([41,42,],[53,63,]),'expression':([41,42,60,68,71,73,74,75,76,77,78,107,116,],[54,54,84,91,93,95,96,97,98,99,100,113,117,]),'term':([41,42,56,60,68,71,73,74,75,76,77,78,79,80,107,116,],[55,55,83,55,55,55,55,55,55,55,55,55,101,102,55,55,]),'f_actor':([41,42,56,60,68,71,73,74,75,76,77,78,79,80,81,82,107,116,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,103,104,57,57,]),'var_name':([41,42,56,60,68,71,73,74,75,76,77,78,79,80,81,82,107,116,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'number':([41,42,56,60,68,71,73,74,75,76,77,78,79,80,81,82,107,116,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'statement_list':([45,],[65,]),'inblock':([49,],[69,]),'else_statement':([94,],[111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM IDENT act_insert_prev_var_ident SEMICOLON outblock PERIOD','program',6,'p_program','compiler.py',106),
  ('outblock -> var_decl_part act_set_varscope_local subprog_decl_part act_set_varscope_global statement','outblock',5,'p_outblock','compiler.py',111),
  ('var_decl_part -> var_decl_list SEMICOLON','var_decl_part',2,'p_var_decl_part','compiler.py',116),
  ('var_decl_part -> <empty>','var_decl_part',0,'p_var_decl_part','compiler.py',117),
  ('var_decl_list -> var_decl_list SEMICOLON var_decl','var_decl_list',3,'p_var_decl_list','compiler.py',122),
  ('var_decl_list -> var_decl','var_decl_list',1,'p_var_decl_list','compiler.py',123),
  ('var_decl -> VAR id_list','var_decl',2,'p_var_decl','compiler.py',128),
  ('subprog_decl_part -> subprog_decl_list SEMICOLON','subprog_decl_part',2,'p_subprog_decl_part','compiler.py',133),
  ('subprog_decl_part -> <empty>','subprog_decl_part',0,'p_subprog_decl_part','compiler.py',134),
  ('subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl','subprog_decl_list',3,'p_subprog_decl_list','compiler.py',139),
  ('subprog_decl_list -> subprog_decl','subprog_decl_list',1,'p_subprog_decl_list','compiler.py',140),
  ('subprog_decl -> proc_decl','subprog_decl',1,'p_subprog_decl','compiler.py',145),
  ('proc_decl -> PROCEDURE proc_name SEMICOLON inblock','proc_decl',4,'p_proc_decl','compiler.py',150),
  ('proc_name -> IDENT act_insert_prev_proc_ident','proc_name',2,'p_proc_name','compiler.py',155),
  ('inblock -> var_decl_part statement','inblock',2,'p_inblock','compiler.py',160),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list','compiler.py',165),
  ('statement_list -> statement','statement_list',1,'p_statement_list','compiler.py',166),
  ('statement -> assignment_statement','statement',1,'p_statement','compiler.py',171),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',172),
  ('statement -> while_statement','statement',1,'p_statement','compiler.py',173),
  ('statement -> for_statement','statement',1,'p_statement','compiler.py',174),
  ('statement -> proc_call_statement','statement',1,'p_statement','compiler.py',175),
  ('statement -> null_statement','statement',1,'p_statement','compiler.py',176),
  ('statement -> block_statement','statement',1,'p_statement','compiler.py',177),
  ('statement -> read_statement','statement',1,'p_statement','compiler.py',178),
  ('statement -> write_statement','statement',1,'p_statement','compiler.py',179),
  ('assignment_statement -> IDENT act_lookup ASSIGN expression','assignment_statement',4,'p_assignment_statement','compiler.py',184),
  ('if_statement -> IF condition THEN statement else_statement','if_statement',5,'p_if_statement','compiler.py',189),
  ('else_statement -> ELSE statement','else_statement',2,'p_else_statement','compiler.py',194),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','compiler.py',195),
  ('while_statement -> WHILE condition DO statement','while_statement',4,'p_while_statement','compiler.py',200),
  ('for_statement -> FOR IDENT act_lookup ASSIGN expression TO expression DO statement','for_statement',9,'p_for_statement','compiler.py',205),
  ('proc_call_statement -> proc_call_name','proc_call_statement',1,'p_proc_call_statement','compiler.py',210),
  ('proc_call_name -> IDENT act_lookup','proc_call_name',2,'p_proc_call_name','compiler.py',215),
  ('block_statement -> BEGIN statement_list END','block_statement',3,'p_block_statement','compiler.py',220),
  ('read_statement -> READ LPAREN IDENT act_lookup RPAREN','read_statement',5,'p_read_statement','compiler.py',225),
  ('write_statement -> WRITE LPAREN expression RPAREN','write_statement',4,'p_write_statement','compiler.py',230),
  ('null_statement -> <empty>','null_statement',0,'p_null_statement','compiler.py',235),
  ('condition -> expression EQ expression','condition',3,'p_condition','compiler.py',240),
  ('condition -> expression NEQ expression','condition',3,'p_condition','compiler.py',241),
  ('condition -> expression LT expression','condition',3,'p_condition','compiler.py',242),
  ('condition -> expression LE expression','condition',3,'p_condition','compiler.py',243),
  ('condition -> expression GT expression','condition',3,'p_condition','compiler.py',244),
  ('condition -> expression GE expression','condition',3,'p_condition','compiler.py',245),
  ('expression -> term','expression',1,'p_expression','compiler.py',250),
  ('expression -> MINUS term','expression',2,'p_expression','compiler.py',251),
  ('expression -> expression PLUS term','expression',3,'p_expression','compiler.py',252),
  ('expression -> expression MINUS term','expression',3,'p_expression','compiler.py',253),
  ('term -> f_actor','term',1,'p_term','compiler.py',258),
  ('term -> term MULT f_actor','term',3,'p_term','compiler.py',259),
  ('term -> term DIV f_actor','term',3,'p_term','compiler.py',260),
  ('f_actor -> var_name','f_actor',1,'p_f_actor','compiler.py',265),
  ('f_actor -> number','f_actor',1,'p_f_actor','compiler.py',266),
  ('f_actor -> LPAREN expression RPAREN','f_actor',3,'p_f_actor','compiler.py',267),
  ('var_name -> IDENT act_lookup','var_name',2,'p_var_name','compiler.py',272),
  ('number -> NUMBER','number',1,'p_number','compiler.py',277),
  ('id_list -> IDENT act_insert_prev_var_ident','id_list',2,'p_id_list','compiler.py',282),
  ('id_list -> id_list COMMA IDENT act_insert_prev_var_ident','id_list',4,'p_id_list','compiler.py',283),
  ('act_insert_prev_var_ident -> <empty>','act_insert_prev_var_ident',0,'p_act_insert_prev_var_ident','compiler.py',288),
  ('act_insert_prev_proc_ident -> <empty>','act_insert_prev_proc_ident',0,'p_act_insert_prev_proc_ident','compiler.py',297),
  ('act_lookup -> <empty>','act_lookup',0,'p_act_lookup','compiler.py',306),
  ('act_set_varscope_local -> <empty>','act_set_varscope_local',0,'p_act_set_varscope_local','compiler.py',314),
  ('act_set_varscope_global -> act_delete_local_ident','act_set_varscope_global',1,'p_act_set_varscope_global','compiler.py',321),
  ('act_delete_local_ident -> <empty>','act_delete_local_ident',0,'p_act_delete_local_ident','compiler.py',328),
]
