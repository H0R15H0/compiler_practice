
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BEGIN COMMA DIV DO ELSE END EQ FOR FUNCTION GE GT IDENT IF INTERVAL LBRACKET LE LPAREN LT MINUS MULT NEQ NUMBER PERIOD PLUS PROCEDURE PROGRAM RBRACKET READ RPAREN SEMICOLON THEN TO VAR WHILE WRITE\n    program : PROGRAM IDENT SEMICOLON outblock PERIOD\n    \n    outblock : var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement\n    \n    outblock_act :\n    \n    var_decl_part : var_decl_list SEMICOLON\n                  |\n    \n    var_decl_list : var_decl_list SEMICOLON var_decl\n        | var_decl\n    \n    var_decl : VAR id_list\n    \n    subprog_decl_part : subprog_decl_list SEMICOLON\n        | \n    \n    subprog_decl_list : subprog_decl_list SEMICOLON subprog_decl\n        | subprog_decl\n    \n    subprog_decl : proc_decl\n        | func_decl\n    \n    proc_decl : PROCEDURE proc_name SEMICOLON inblock\n        | PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock\n    \n    func_decl : FUNCTION func_name LPAREN RPAREN SEMICOLON inblock\n        | FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock\n    \n    callee_arg_list : IDENT act_insert_prev_var_ident\n        | callee_arg_list COMMA IDENT act_insert_prev_var_ident\n    \n    act_proc_args_set :\n    \n    act_proc_args_done :\n    \n    proc_name : IDENT act_insert_prev_proc_ident\n    \n    func_name : IDENT act_insert_prev_func_ident act_lookup_prev_ident\n    \n    inblock : var_decl_part statement\n    \n    statement_list : statement_list SEMICOLON statement\n        | statement\n    \n    statement : assignment_statement\n        | if_statement\n        | while_statement\n        | for_statement\n        | proc_call_statement\n        | null_statement\n        | block_statement\n        | read_statement\n        | write_statement\n    \n    assignment_statement : IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident\n        | IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression\n    \n    act_assign_ident : \n    \n    if_statement : act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3\n    \n    act_generate_labels :\n    \n    act_insert_br :\n    \n    act_insert_label1 :\n    \n    act_insert_label2 :\n    \n    act_insert_label3 :\n    \n    act_insert_jump1 :\n    \n    act_insert_jump3 :\n    \n    else_statement : ELSE statement\n        | \n    \n    while_statement : WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3\n    \n    act_insert_br_while :\n    \n    for_statement : FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3\n    \n    act_insert_br_for :\n    \n    act_increment_itr :\n    \n    proc_call_statement : proc_call_name\n        | proc_call_name LPAREN caller_arg_list RPAREN\n    \n    proc_call_name : IDENT act_lookup_prev_ident\n    \n    caller_arg_list : expression\n        | caller_arg_list COMMA expression\n    \n    block_statement : BEGIN statement_list END\n    \n    read_statement : READ LPAREN var_name_addr RPAREN\n    \n    write_statement : WRITE LPAREN expression RPAREN\n    \n    null_statement : \n    \n    condition : expression EQ expression\n        | expression NEQ expression\n        | expression LT expression\n        | expression LE expression\n        | expression GT expression\n        | expression GE expression\n    \n    expression : term\n        | MINUS term\n        | expression PLUS term\n        | expression MINUS term\n    \n    term : factor\n        | term MULT factor\n        | term DIV factor\n    \n    factor : var_name\n        | number\n        | LPAREN expression RPAREN\n        | func_call\n    \n    func_call : func_call_name LPAREN RPAREN\n        | func_call_name LPAREN caller_arg_list RPAREN\n    \n    func_call_name : IDENT act_lookup_prev_ident\n    \n    var_name : var_name_addr\n    \n    var_name_addr : IDENT act_lookup_prev_ident\n        | IDENT act_lookup_prev_ident LBRACKET expression RBRACKET\n    \n    number : NUMBER\n    \n    id_list : IDENT act_insert_prev_var_ident\n        | IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident\n        | id_list COMMA IDENT act_insert_prev_var_ident\n        | id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident\n    \n    act_insert_prev_var_ident :\n    \n    act_insert_prev_proc_ident :\n    \n    act_insert_prev_func_ident :\n    \n    act_insert_array_var_ident :\n    \n    act_lookup_prev_ident :\n    \n    act_set_varscope_local :\n    \n    act_set_varscope_global : act_delete_local_ident\n    \n    act_delete_local_ident :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,10,],[0,-1,]),'IDENT':([2,4,6,9,11,12,15,20,21,23,26,27,35,36,38,39,41,58,59,61,65,66,68,73,74,75,76,79,80,84,88,89,93,97,102,107,112,121,122,123,124,125,126,127,128,129,130,133,135,138,149,163,165,167,169,171,172,182,185,191,193,201,],[3,-5,-97,14,-10,-4,-3,29,31,32,-99,-9,56,-98,-5,-21,-21,-41,-41,56,56,83,83,101,-46,103,101,109,101,-5,101,101,101,101,-43,56,144,101,101,101,101,101,101,101,101,101,101,101,101,101,-43,101,101,-5,-5,101,56,-44,56,56,101,56,]),'SEMICOLON':([3,7,8,12,13,14,16,17,18,19,22,24,28,29,32,34,37,38,40,43,47,48,49,50,51,52,53,54,55,56,60,61,64,65,67,72,77,78,81,84,87,92,94,95,96,98,99,101,106,107,114,117,118,131,134,137,139,140,142,143,145,146,147,149,156,157,158,159,160,161,167,169,170,172,173,177,178,179,180,181,182,184,185,187,188,190,191,192,194,195,196,198,201,202,203,204,205,],[4,12,-7,-4,-8,-92,27,-12,-13,-14,-6,-88,38,-93,-92,-87,-11,-5,-23,-90,-28,-29,-30,-31,-32,-33,-34,-35,-36,-96,-55,-63,-15,-63,84,-57,107,-27,-25,-5,-95,-70,-74,-77,-78,-80,-84,-96,-60,-63,-17,-89,-39,-71,-85,-56,-26,-61,-62,167,169,-95,-37,-43,-72,-73,-75,-76,-79,-81,-5,-5,-91,-63,-82,-16,-18,-38,-47,-86,-44,-44,-63,-49,-46,-47,-63,-45,-45,-48,-50,-40,-63,-54,-46,-45,-52,]),'PROCEDURE':([4,6,11,12,27,],[-5,-97,20,-4,20,]),'FUNCTION':([4,6,11,12,27,],[-5,-97,21,-4,21,]),'WHILE':([4,6,11,12,15,26,27,35,36,38,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,58,-98,-5,58,58,-5,58,-43,-5,-5,58,-44,58,58,58,]),'FOR':([4,6,11,12,15,26,27,35,36,38,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,59,-98,-5,59,59,-5,59,-43,-5,-5,59,-44,59,59,59,]),'BEGIN':([4,6,11,12,15,26,27,35,36,38,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,61,-98,-5,61,61,-5,61,-43,-5,-5,61,-44,61,61,61,]),'READ':([4,6,11,12,15,26,27,35,36,38,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,62,-98,-5,62,62,-5,62,-43,-5,-5,62,-44,62,62,62,]),'WRITE':([4,6,11,12,15,26,27,35,36,38,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,63,-98,-5,63,63,-5,63,-43,-5,-5,63,-44,63,63,63,]),'IF':([4,6,11,12,15,26,27,35,36,38,57,61,65,84,107,149,167,169,172,182,185,191,201,],[-5,-97,-10,-4,-3,-99,-9,-41,-98,-5,73,-41,-41,-5,-41,-43,-5,-5,-41,-44,-41,-41,-41,]),'PERIOD':([4,5,6,11,12,15,26,27,34,35,36,46,47,48,49,50,51,52,53,54,55,56,60,72,92,94,95,96,98,99,101,106,118,131,134,137,140,142,147,149,156,157,158,159,160,161,172,173,179,180,181,182,184,185,187,188,190,191,192,194,195,196,198,201,202,203,204,205,],[-5,10,-97,-10,-4,-3,-99,-9,-87,-63,-98,-2,-28,-29,-30,-31,-32,-33,-34,-35,-36,-96,-55,-57,-70,-74,-77,-78,-80,-84,-96,-60,-39,-71,-85,-56,-61,-62,-37,-43,-72,-73,-75,-76,-79,-81,-63,-82,-38,-47,-86,-44,-44,-63,-49,-46,-47,-63,-45,-45,-48,-50,-40,-63,-54,-46,-45,-52,]),'VAR':([4,12,38,84,167,169,],[9,9,9,9,9,9,]),'COMMA':([13,14,24,32,34,43,82,83,85,87,92,94,95,96,98,99,101,104,105,113,117,131,134,144,146,156,157,158,159,160,161,162,166,168,170,173,181,],[23,-92,-88,-92,-87,-90,112,-92,112,-95,-70,-74,-77,-78,-80,-84,-96,138,-58,-19,-89,-71,-85,-92,-95,-72,-73,-75,-76,-79,-81,138,-59,-20,-91,-82,-86,]),'LBRACKET':([14,32,56,72,101,109,134,141,],[25,44,-96,89,-96,-96,163,163,]),'NUMBER':([25,44,45,58,73,74,76,80,86,88,89,93,97,102,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[34,34,34,-41,34,-46,34,34,34,34,34,34,34,-43,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LPAREN':([28,29,30,31,40,42,56,58,60,62,63,69,72,73,74,76,80,88,89,93,97,100,101,102,121,122,123,124,125,126,127,128,129,130,133,134,135,138,163,165,171,193,],[39,-93,41,-94,-23,-96,-96,-41,76,79,80,-24,-57,97,-46,97,97,97,97,97,97,133,-96,-43,97,97,97,97,97,97,97,97,97,97,97,-83,97,97,97,97,97,97,]),'INTERVAL':([33,34,70,],[45,-87,86,]),'RBRACKET':([34,71,92,94,95,96,98,99,101,116,119,131,134,156,157,158,159,160,161,173,174,181,],[-87,87,-70,-74,-77,-78,-80,-84,-96,146,148,-71,-85,-72,-73,-75,-76,-79,-81,-82,181,-86,]),'MULT':([34,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,129,-74,-77,-78,-80,-84,-96,129,-85,129,129,-75,-76,-79,-81,-82,-86,]),'DIV':([34,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,130,-74,-77,-78,-80,-84,-96,130,-85,130,130,-75,-76,-79,-81,-82,-86,]),'EQ':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,121,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'NEQ':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,122,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'LT':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,123,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'LE':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,124,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'GT':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,125,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'GE':([34,91,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,181,],[-87,126,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-86,]),'PLUS':([34,91,92,94,95,96,98,99,101,105,110,118,119,131,132,134,150,151,152,153,154,155,156,157,158,159,160,161,166,173,174,176,179,181,197,],[-87,127,-70,-74,-77,-78,-80,-84,-96,127,127,127,127,-71,127,-85,127,127,127,127,127,127,-72,-73,-75,-76,-79,-81,127,-82,127,127,127,-86,127,]),'MINUS':([34,58,73,74,76,80,88,89,91,92,94,95,96,97,98,99,101,102,105,110,118,119,121,122,123,124,125,126,131,132,133,134,135,138,150,151,152,153,154,155,156,157,158,159,160,161,163,165,166,171,173,174,176,179,181,193,197,],[-87,-41,93,-46,93,93,93,93,128,-70,-74,-77,-78,93,-80,-84,-96,-43,128,128,128,128,93,93,93,93,93,93,-71,128,93,-85,93,93,128,128,128,128,128,128,-72,-73,-75,-76,-79,-81,93,93,128,93,-82,128,128,128,-86,93,128,]),'RPAREN':([34,41,82,83,85,92,94,95,96,98,99,101,104,105,108,109,110,111,113,115,131,132,133,134,141,144,156,157,158,159,160,161,162,166,168,173,181,],[-87,67,-22,-92,-22,-70,-74,-77,-78,-80,-84,-96,137,-58,140,-96,142,143,-19,145,-71,160,161,-85,-85,-92,-72,-73,-75,-76,-79,-81,173,-59,-20,-82,-86,]),'END':([34,47,48,49,50,51,52,53,54,55,56,60,61,72,77,78,92,94,95,96,98,99,101,106,107,118,131,134,137,139,140,142,147,149,156,157,158,159,160,161,172,173,179,180,181,182,184,185,187,188,190,191,192,194,195,196,198,201,202,203,204,205,],[-87,-28,-29,-30,-31,-32,-33,-34,-35,-36,-96,-55,-63,-57,106,-27,-70,-74,-77,-78,-80,-84,-96,-60,-63,-39,-71,-85,-56,-26,-61,-62,-37,-43,-72,-73,-75,-76,-79,-81,-63,-82,-38,-47,-86,-44,-44,-63,-49,-46,-47,-63,-45,-45,-48,-50,-40,-63,-54,-46,-45,-52,]),'ELSE':([34,47,48,49,50,51,52,53,54,55,56,60,72,92,94,95,96,98,99,101,106,118,131,134,137,140,142,147,149,156,157,158,159,160,161,172,173,179,180,181,182,184,185,187,188,190,191,192,194,195,196,198,201,202,203,204,205,],[-87,-28,-29,-30,-31,-32,-33,-34,-35,-36,-96,-55,-57,-70,-74,-77,-78,-80,-84,-96,-60,-39,-71,-85,-56,-61,-62,-37,-43,-72,-73,-75,-76,-79,-81,-63,-82,-38,-47,-86,-44,-44,-63,191,-46,-47,-63,-45,-45,-48,-50,-40,-63,-54,-46,-45,-52,]),'THEN':([34,90,92,94,95,96,98,99,101,120,131,134,150,151,152,153,154,155,156,157,158,159,160,161,173,181,],[-87,-42,-70,-74,-77,-78,-80,-84,-96,149,-71,-85,-64,-65,-66,-67,-68,-69,-72,-73,-75,-76,-79,-81,-82,-86,]),'DO':([34,92,94,95,96,98,99,101,131,134,150,151,152,153,154,155,156,157,158,159,160,161,164,173,175,181,197,199,200,],[-87,-70,-74,-77,-78,-80,-84,-96,-71,-85,-64,-65,-66,-67,-68,-69,-72,-73,-75,-76,-79,-81,-51,-82,182,-86,-53,-44,201,]),'TO':([34,92,94,95,96,98,99,101,131,134,156,157,158,159,160,161,173,176,181,183,186,189,],[-87,-70,-74,-77,-78,-80,-84,-96,-71,-85,-72,-73,-75,-76,-79,-81,-82,-39,-86,-46,-43,193,]),'ASSIGN':([56,72,103,136,148,],[-96,88,-96,165,171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'outblock':([4,],[5,]),'var_decl_part':([4,38,84,167,169,],[6,65,65,65,65,]),'var_decl_list':([4,38,84,167,169,],[7,7,7,7,7,]),'var_decl':([4,12,38,84,167,169,],[8,22,8,8,8,8,]),'act_set_varscope_local':([6,],[11,]),'id_list':([9,],[13,]),'subprog_decl_part':([11,],[15,]),'subprog_decl_list':([11,],[16,]),'subprog_decl':([11,27,],[17,37,]),'proc_decl':([11,27,],[18,18,]),'func_decl':([11,27,],[19,19,]),'act_insert_prev_var_ident':([14,32,83,144,],[24,43,113,168,]),'outblock_act':([15,],[26,]),'proc_name':([20,],[28,]),'func_name':([21,],[30,]),'number':([25,44,45,73,76,80,86,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[33,70,71,96,96,96,116,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'act_set_varscope_global':([26,],[35,]),'act_delete_local_ident':([26,],[36,]),'act_insert_prev_proc_ident':([29,],[40,]),'act_insert_prev_func_ident':([31,],[42,]),'statement':([35,61,65,107,172,185,191,201,],[46,78,81,139,180,188,195,202,]),'assignment_statement':([35,61,65,107,172,185,191,201,],[47,47,47,47,47,47,47,47,]),'if_statement':([35,61,65,107,172,185,191,201,],[48,48,48,48,48,48,48,48,]),'while_statement':([35,61,65,107,172,185,191,201,],[49,49,49,49,49,49,49,49,]),'for_statement':([35,61,65,107,172,185,191,201,],[50,50,50,50,50,50,50,50,]),'proc_call_statement':([35,61,65,107,172,185,191,201,],[51,51,51,51,51,51,51,51,]),'null_statement':([35,61,65,107,172,185,191,201,],[52,52,52,52,52,52,52,52,]),'block_statement':([35,61,65,107,172,185,191,201,],[53,53,53,53,53,53,53,53,]),'read_statement':([35,61,65,107,172,185,191,201,],[54,54,54,54,54,54,54,54,]),'write_statement':([35,61,65,107,172,185,191,201,],[55,55,55,55,55,55,55,55,]),'act_generate_labels':([35,58,59,61,65,107,172,185,191,201,],[57,74,75,57,57,57,57,57,57,57,]),'proc_call_name':([35,61,65,107,172,185,191,201,],[60,60,60,60,60,60,60,60,]),'inblock':([38,84,167,169,],[64,114,177,178,]),'act_proc_args_set':([39,41,],[66,68,]),'act_lookup_prev_ident':([42,56,101,103,109,],[69,72,134,136,141,]),'statement_list':([61,],[77,]),'callee_arg_list':([66,68,],[82,85,]),'condition':([73,135,],[90,164,]),'expression':([73,76,80,88,89,97,121,122,123,124,125,126,133,135,138,163,165,171,193,],[91,105,110,118,119,132,150,151,152,153,154,155,105,91,166,174,176,179,197,]),'term':([73,76,80,88,89,93,97,121,122,123,124,125,126,127,128,133,135,138,163,165,171,193,],[92,92,92,92,92,131,92,92,92,92,92,92,92,156,157,92,92,92,92,92,92,92,]),'factor':([73,76,80,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,158,159,94,94,94,94,94,94,94,]),'var_name':([73,76,80,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'func_call':([73,76,80,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'var_name_addr':([73,76,79,80,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[99,99,108,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'func_call_name':([73,76,80,88,89,93,97,121,122,123,124,125,126,127,128,129,130,133,135,138,163,165,171,193,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'act_insert_jump1':([74,183,188,203,],[102,186,192,204,]),'caller_arg_list':([76,133,],[104,162,]),'act_proc_args_done':([82,85,],[111,115,]),'act_insert_array_var_ident':([87,146,],[117,170,]),'act_insert_br':([90,],[120,]),'act_insert_label1':([102,149,186,],[135,172,189,]),'act_assign_ident':([118,176,],[147,183,]),'act_insert_br_while':([164,],[175,]),'act_insert_jump3':([180,190,],[184,194,]),'act_insert_label2':([182,184,199,],[185,187,200,]),'else_statement':([187,],[190,]),'act_insert_label3':([192,194,204,],[196,198,205,]),'act_insert_br_for':([197,],[199,]),'act_increment_itr':([202,],[203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM IDENT SEMICOLON outblock PERIOD','program',5,'p_program','compiler.py',126),
  ('outblock -> var_decl_part act_set_varscope_local subprog_decl_part outblock_act act_set_varscope_global statement','outblock',6,'p_outblock','compiler.py',154),
  ('outblock_act -> <empty>','outblock_act',0,'p_outblock_act','compiler.py',161),
  ('var_decl_part -> var_decl_list SEMICOLON','var_decl_part',2,'p_var_decl_part','compiler.py',168),
  ('var_decl_part -> <empty>','var_decl_part',0,'p_var_decl_part','compiler.py',169),
  ('var_decl_list -> var_decl_list SEMICOLON var_decl','var_decl_list',3,'p_var_decl_list','compiler.py',174),
  ('var_decl_list -> var_decl','var_decl_list',1,'p_var_decl_list','compiler.py',175),
  ('var_decl -> VAR id_list','var_decl',2,'p_var_decl','compiler.py',180),
  ('subprog_decl_part -> subprog_decl_list SEMICOLON','subprog_decl_part',2,'p_subprog_decl_part','compiler.py',185),
  ('subprog_decl_part -> <empty>','subprog_decl_part',0,'p_subprog_decl_part','compiler.py',186),
  ('subprog_decl_list -> subprog_decl_list SEMICOLON subprog_decl','subprog_decl_list',3,'p_subprog_decl_list','compiler.py',191),
  ('subprog_decl_list -> subprog_decl','subprog_decl_list',1,'p_subprog_decl_list','compiler.py',192),
  ('subprog_decl -> proc_decl','subprog_decl',1,'p_subprog_decl','compiler.py',197),
  ('subprog_decl -> func_decl','subprog_decl',1,'p_subprog_decl','compiler.py',198),
  ('proc_decl -> PROCEDURE proc_name SEMICOLON inblock','proc_decl',4,'p_proc_decl','compiler.py',203),
  ('proc_decl -> PROCEDURE proc_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock','proc_decl',9,'p_proc_decl','compiler.py',204),
  ('func_decl -> FUNCTION func_name LPAREN RPAREN SEMICOLON inblock','func_decl',6,'p_func_decl','compiler.py',211),
  ('func_decl -> FUNCTION func_name LPAREN act_proc_args_set callee_arg_list act_proc_args_done RPAREN SEMICOLON inblock','func_decl',9,'p_func_decl','compiler.py',212),
  ('callee_arg_list -> IDENT act_insert_prev_var_ident','callee_arg_list',2,'p_callee_arg_list','compiler.py',223),
  ('callee_arg_list -> callee_arg_list COMMA IDENT act_insert_prev_var_ident','callee_arg_list',4,'p_callee_arg_list','compiler.py',224),
  ('act_proc_args_set -> <empty>','act_proc_args_set',0,'p_act_proc_args_set','compiler.py',234),
  ('act_proc_args_done -> <empty>','act_proc_args_done',0,'p_act_proc_args_done','compiler.py',241),
  ('proc_name -> IDENT act_insert_prev_proc_ident','proc_name',2,'p_proc_name','compiler.py',251),
  ('func_name -> IDENT act_insert_prev_func_ident act_lookup_prev_ident','func_name',3,'p_func_name','compiler.py',259),
  ('inblock -> var_decl_part statement','inblock',2,'p_inblock','compiler.py',269),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list','compiler.py',274),
  ('statement_list -> statement','statement_list',1,'p_statement_list','compiler.py',275),
  ('statement -> assignment_statement','statement',1,'p_statement','compiler.py',280),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',281),
  ('statement -> while_statement','statement',1,'p_statement','compiler.py',282),
  ('statement -> for_statement','statement',1,'p_statement','compiler.py',283),
  ('statement -> proc_call_statement','statement',1,'p_statement','compiler.py',284),
  ('statement -> null_statement','statement',1,'p_statement','compiler.py',285),
  ('statement -> block_statement','statement',1,'p_statement','compiler.py',286),
  ('statement -> read_statement','statement',1,'p_statement','compiler.py',287),
  ('statement -> write_statement','statement',1,'p_statement','compiler.py',288),
  ('assignment_statement -> IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident','assignment_statement',5,'p_assignment_statement','compiler.py',293),
  ('assignment_statement -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET ASSIGN expression','assignment_statement',7,'p_assignment_statement','compiler.py',294),
  ('act_assign_ident -> <empty>','act_assign_ident',0,'p_act_assign_ident','compiler.py',311),
  ('if_statement -> act_generate_labels IF condition act_insert_br THEN act_insert_label1 statement act_insert_jump3 act_insert_label2 else_statement act_insert_jump3 act_insert_label3','if_statement',12,'p_if_statement','compiler.py',318),
  ('act_generate_labels -> <empty>','act_generate_labels',0,'p_act_generate_labels','compiler.py',323),
  ('act_insert_br -> <empty>','act_insert_br',0,'p_act_insert_br','compiler.py',334),
  ('act_insert_label1 -> <empty>','act_insert_label1',0,'p_act_insert_label1','compiler.py',341),
  ('act_insert_label2 -> <empty>','act_insert_label2',0,'p_act_insert_label2','compiler.py',349),
  ('act_insert_label3 -> <empty>','act_insert_label3',0,'p_act_insert_label3','compiler.py',357),
  ('act_insert_jump1 -> <empty>','act_insert_jump1',0,'p_act_insert_jump1','compiler.py',366),
  ('act_insert_jump3 -> <empty>','act_insert_jump3',0,'p_act_insert_jump3','compiler.py',382),
  ('else_statement -> ELSE statement','else_statement',2,'p_else_statement','compiler.py',390),
  ('else_statement -> <empty>','else_statement',0,'p_else_statement','compiler.py',391),
  ('while_statement -> WHILE act_generate_labels act_insert_jump1 act_insert_label1 condition act_insert_br_while DO act_insert_label2 statement act_insert_jump1 act_insert_label3','while_statement',11,'p_while_statement','compiler.py',396),
  ('act_insert_br_while -> <empty>','act_insert_br_while',0,'p_act_insert_br_while','compiler.py',401),
  ('for_statement -> FOR act_generate_labels IDENT act_lookup_prev_ident ASSIGN expression act_assign_ident act_insert_jump1 act_insert_label1 TO expression act_insert_br_for act_insert_label2 DO statement act_increment_itr act_insert_jump1 act_insert_label3','for_statement',18,'p_for_statement','compiler.py',408),
  ('act_insert_br_for -> <empty>','act_insert_br_for',0,'p_act_insert_br_for','compiler.py',413),
  ('act_increment_itr -> <empty>','act_increment_itr',0,'p_act_increment_itr','compiler.py',427),
  ('proc_call_statement -> proc_call_name','proc_call_statement',1,'p_proc_call_statement','compiler.py',438),
  ('proc_call_statement -> proc_call_name LPAREN caller_arg_list RPAREN','proc_call_statement',4,'p_proc_call_statement','compiler.py',439),
  ('proc_call_name -> IDENT act_lookup_prev_ident','proc_call_name',2,'p_proc_call_name','compiler.py',448),
  ('caller_arg_list -> expression','caller_arg_list',1,'p_caller_arg_list','compiler.py',454),
  ('caller_arg_list -> caller_arg_list COMMA expression','caller_arg_list',3,'p_caller_arg_list','compiler.py',455),
  ('block_statement -> BEGIN statement_list END','block_statement',3,'p_block_statement','compiler.py',465),
  ('read_statement -> READ LPAREN var_name_addr RPAREN','read_statement',4,'p_read_statement','compiler.py',470),
  ('write_statement -> WRITE LPAREN expression RPAREN','write_statement',4,'p_write_statement','compiler.py',481),
  ('null_statement -> <empty>','null_statement',0,'p_null_statement','compiler.py',490),
  ('condition -> expression EQ expression','condition',3,'p_condition','compiler.py',495),
  ('condition -> expression NEQ expression','condition',3,'p_condition','compiler.py',496),
  ('condition -> expression LT expression','condition',3,'p_condition','compiler.py',497),
  ('condition -> expression LE expression','condition',3,'p_condition','compiler.py',498),
  ('condition -> expression GT expression','condition',3,'p_condition','compiler.py',499),
  ('condition -> expression GE expression','condition',3,'p_condition','compiler.py',500),
  ('expression -> term','expression',1,'p_expression','compiler.py',509),
  ('expression -> MINUS term','expression',2,'p_expression','compiler.py',510),
  ('expression -> expression PLUS term','expression',3,'p_expression','compiler.py',511),
  ('expression -> expression MINUS term','expression',3,'p_expression','compiler.py',512),
  ('term -> factor','term',1,'p_term','compiler.py',534),
  ('term -> term MULT factor','term',3,'p_term','compiler.py',535),
  ('term -> term DIV factor','term',3,'p_term','compiler.py',536),
  ('factor -> var_name','factor',1,'p_factor','compiler.py',556),
  ('factor -> number','factor',1,'p_factor','compiler.py',557),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','compiler.py',558),
  ('factor -> func_call','factor',1,'p_factor','compiler.py',559),
  ('func_call -> func_call_name LPAREN RPAREN','func_call',3,'p_func_call','compiler.py',568),
  ('func_call -> func_call_name LPAREN caller_arg_list RPAREN','func_call',4,'p_func_call','compiler.py',569),
  ('func_call_name -> IDENT act_lookup_prev_ident','func_call_name',2,'p_func_call_name','compiler.py',580),
  ('var_name -> var_name_addr','var_name',1,'p_var_name','compiler.py',586),
  ('var_name_addr -> IDENT act_lookup_prev_ident','var_name_addr',2,'p_var_name_addr','compiler.py',600),
  ('var_name_addr -> IDENT act_lookup_prev_ident LBRACKET expression RBRACKET','var_name_addr',5,'p_var_name_addr','compiler.py',601),
  ('number -> NUMBER','number',1,'p_number','compiler.py',622),
  ('id_list -> IDENT act_insert_prev_var_ident','id_list',2,'p_id_list','compiler.py',628),
  ('id_list -> IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident','id_list',7,'p_id_list','compiler.py',629),
  ('id_list -> id_list COMMA IDENT act_insert_prev_var_ident','id_list',4,'p_id_list','compiler.py',630),
  ('id_list -> id_list COMMA IDENT LBRACKET number INTERVAL number RBRACKET act_insert_array_var_ident','id_list',9,'p_id_list','compiler.py',631),
  ('act_insert_prev_var_ident -> <empty>','act_insert_prev_var_ident',0,'p_act_insert_prev_var_ident','compiler.py',646),
  ('act_insert_prev_proc_ident -> <empty>','act_insert_prev_proc_ident',0,'p_act_insert_prev_proc_ident','compiler.py',657),
  ('act_insert_prev_func_ident -> <empty>','act_insert_prev_func_ident',0,'p_act_insert_prev_func_ident','compiler.py',664),
  ('act_insert_array_var_ident -> <empty>','act_insert_array_var_ident',0,'p_act_insert_array_var_ident','compiler.py',674),
  ('act_lookup_prev_ident -> <empty>','act_lookup_prev_ident',0,'p_act_lookup_prev_ident','compiler.py',685),
  ('act_set_varscope_local -> <empty>','act_set_varscope_local',0,'p_act_set_varscope_local','compiler.py',696),
  ('act_set_varscope_global -> act_delete_local_ident','act_set_varscope_global',1,'p_act_set_varscope_global','compiler.py',703),
  ('act_delete_local_ident -> <empty>','act_delete_local_ident',0,'p_act_delete_local_ident','compiler.py',710),
]
